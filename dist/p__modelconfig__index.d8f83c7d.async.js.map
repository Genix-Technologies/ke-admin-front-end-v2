{"version":3,"file":"p__modelconfig__index.d8f83c7d.async.js","mappings":"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","sources":["webpack:///./node_modules/@ant-design/icons/es/components/Icon.js","webpack:///./node_modules/@ant-design/icons-svg/es/asn/MonitorOutlined.js","webpack:///./node_modules/@ant-design/icons/es/icons/MonitorOutlined.js","webpack:///./node_modules/@ant-design/icons-svg/es/asn/SettingOutlined.js","webpack:///./node_modules/@ant-design/icons/es/icons/SettingOutlined.js","webpack:///./node_modules/@ant-design/icons-svg/es/asn/UserOutlined.js","webpack:///./node_modules/@ant-design/icons/es/icons/UserOutlined.js","webpack:///./src/components/ui/button.tsx","webpack:///./src/components/ui/card.tsx","webpack:///./src/constants/knowledge.ts","webpack:///./src/hooks/llm-hooks.tsx","webpack:///./src/pages/modelconfig/index.less?1669","webpack:///./src/pages/modelconfig/mconfig-setting/setting-model/api-key-modal/index.tsx","webpack:///./src/pages/modelconfig/mconfig-setting/constants.tsx","webpack:///./src/pages/modelconfig/mconfig-setting/setting-model/azure-openai-modal/index.tsx","webpack:///./src/pages/modelconfig/mconfig-setting/setting-model/google-modal/index.tsx","webpack:///./src/pages/modelconfig/mconfig-setting/setting-model/ollama-modal/index.tsx","webpack:///./src/pages/modelconfig/mconfig-setting/setting-model/system-model-setting-modal/index.tsx","webpack:///./src/pages/modelconfig/mconfig-setting/setting-model/hooks.ts","webpack:///./src/pages/modelconfig/model/model-card.tsx","webpack:///./src/pages/modelconfig/mconfig-setting/utils.ts","webpack:///./src/pages/modelconfig/index.tsx","webpack:///./node_modules/antd/es/flex/utils.js","webpack:///./node_modules/antd/es/flex/style/index.js","webpack:///./node_modules/antd/es/flex/index.js","webpack:///./node_modules/class-variance-authority/node_modules/clsx/dist/clsx.mjs","webpack:///./node_modules/class-variance-authority/dist/index.mjs"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"className\", \"component\", \"viewBox\", \"spin\", \"rotate\", \"tabIndex\", \"onClick\", \"children\"];\n// Seems this is used for iconFont\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useComposeRef } from \"rc-util/es/ref\";\nimport Context from \"./Context\";\nimport { svgBaseProps, warning, useInsertStyles } from \"../utils\";\nvar Icon = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var className = props.className,\n    Component = props.component,\n    viewBox = props.viewBox,\n    spin = props.spin,\n    rotate = props.rotate,\n    tabIndex = props.tabIndex,\n    onClick = props.onClick,\n    children = props.children,\n    restProps = _objectWithoutProperties(props, _excluded);\n  var iconRef = React.useRef();\n  var mergedRef = useComposeRef(iconRef, ref);\n  warning(Boolean(Component || children), 'Should have `component` prop or `children`.');\n  useInsertStyles(iconRef);\n  var _React$useContext = React.useContext(Context),\n    _React$useContext$pre = _React$useContext.prefixCls,\n    prefixCls = _React$useContext$pre === void 0 ? 'anticon' : _React$useContext$pre,\n    rootClassName = _React$useContext.rootClassName;\n  var classString = classNames(rootClassName, prefixCls, className);\n  var svgClassString = classNames(_defineProperty({}, \"\".concat(prefixCls, \"-spin\"), !!spin));\n  var svgStyle = rotate ? {\n    msTransform: \"rotate(\".concat(rotate, \"deg)\"),\n    transform: \"rotate(\".concat(rotate, \"deg)\")\n  } : undefined;\n  var innerSvgProps = _objectSpread(_objectSpread({}, svgBaseProps), {}, {\n    className: svgClassString,\n    style: svgStyle,\n    viewBox: viewBox\n  });\n  if (!viewBox) {\n    delete innerSvgProps.viewBox;\n  }\n\n  // component > children\n  var renderInnerNode = function renderInnerNode() {\n    if (Component) {\n      return /*#__PURE__*/React.createElement(Component, innerSvgProps, children);\n    }\n    if (children) {\n      warning(Boolean(viewBox) || React.Children.count(children) === 1 && /*#__PURE__*/React.isValidElement(children) && React.Children.only(children).type === 'use', 'Make sure that you provide correct `viewBox`' + ' prop (default `0 0 1024 1024`) to the icon.');\n      return /*#__PURE__*/React.createElement(\"svg\", _extends({}, innerSvgProps, {\n        viewBox: viewBox\n      }), children);\n    }\n    return null;\n  };\n  var iconTabIndex = tabIndex;\n  if (iconTabIndex === undefined && onClick) {\n    iconTabIndex = -1;\n  }\n  return /*#__PURE__*/React.createElement(\"span\", _extends({\n    role: \"img\"\n  }, restProps, {\n    ref: mergedRef,\n    tabIndex: iconTabIndex,\n    onClick: onClick,\n    className: classString\n  }), renderInnerNode());\n});\nIcon.displayName = 'AntdIcon';\nexport default Icon;","// This icon file is generated automatically.\nvar MonitorOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M692.8 412.7l.2-.2-34.6-44.3a7.97 7.97 0 00-11.2-1.4l-50.4 39.3-70.5-90.1a7.97 7.97 0 00-11.2-1.4l-37.9 29.7a7.97 7.97 0 00-1.4 11.2l70.5 90.2-.2.1 34.6 44.3c2.7 3.5 7.7 4.1 11.2 1.4l50.4-39.3 64.1 82c2.7 3.5 7.7 4.1 11.2 1.4l37.9-29.6c3.5-2.7 4.1-7.7 1.4-11.2l-64.1-82.1zM608 112c-167.9 0-304 136.1-304 304 0 70.3 23.9 135 63.9 186.5L114.3 856.1a8.03 8.03 0 000 11.3l42.3 42.3c3.1 3.1 8.2 3.1 11.3 0l253.6-253.6C473 696.1 537.7 720 608 720c167.9 0 304-136.1 304-304S775.9 112 608 112zm161.2 465.2C726.2 620.3 668.9 644 608 644s-118.2-23.7-161.2-66.8C403.7 534.2 380 476.9 380 416s23.7-118.2 66.8-161.2c43-43.1 100.3-66.8 161.2-66.8s118.2 23.7 161.2 66.8c43.1 43 66.8 100.3 66.8 161.2s-23.7 118.2-66.8 161.2z\" } }] }, \"name\": \"monitor\", \"theme\": \"outlined\" };\nexport default MonitorOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport MonitorOutlinedSvg from \"@ant-design/icons-svg/es/asn/MonitorOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar MonitorOutlined = function MonitorOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: MonitorOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  MonitorOutlined.displayName = 'MonitorOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(MonitorOutlined);","// This icon file is generated automatically.\nvar SettingOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M924.8 625.7l-65.5-56c3.1-19 4.7-38.4 4.7-57.8s-1.6-38.8-4.7-57.8l65.5-56a32.03 32.03 0 009.3-35.2l-.9-2.6a443.74 443.74 0 00-79.7-137.9l-1.8-2.1a32.12 32.12 0 00-35.1-9.5l-81.3 28.9c-30-24.6-63.5-44-99.7-57.6l-15.7-85a32.05 32.05 0 00-25.8-25.7l-2.7-.5c-52.1-9.4-106.9-9.4-159 0l-2.7.5a32.05 32.05 0 00-25.8 25.7l-15.8 85.4a351.86 351.86 0 00-99 57.4l-81.9-29.1a32 32 0 00-35.1 9.5l-1.8 2.1a446.02 446.02 0 00-79.7 137.9l-.9 2.6c-4.5 12.5-.8 26.5 9.3 35.2l66.3 56.6c-3.1 18.8-4.6 38-4.6 57.1 0 19.2 1.5 38.4 4.6 57.1L99 625.5a32.03 32.03 0 00-9.3 35.2l.9 2.6c18.1 50.4 44.9 96.9 79.7 137.9l1.8 2.1a32.12 32.12 0 0035.1 9.5l81.9-29.1c29.8 24.5 63.1 43.9 99 57.4l15.8 85.4a32.05 32.05 0 0025.8 25.7l2.7.5a449.4 449.4 0 00159 0l2.7-.5a32.05 32.05 0 0025.8-25.7l15.7-85a350 350 0 0099.7-57.6l81.3 28.9a32 32 0 0035.1-9.5l1.8-2.1c34.8-41.1 61.6-87.5 79.7-137.9l.9-2.6c4.5-12.3.8-26.3-9.3-35zM788.3 465.9c2.5 15.1 3.8 30.6 3.8 46.1s-1.3 31-3.8 46.1l-6.6 40.1 74.7 63.9a370.03 370.03 0 01-42.6 73.6L721 702.8l-31.4 25.8c-23.9 19.6-50.5 35-79.3 45.8l-38.1 14.3-17.9 97a377.5 377.5 0 01-85 0l-17.9-97.2-37.8-14.5c-28.5-10.8-55-26.2-78.7-45.7l-31.4-25.9-93.4 33.2c-17-22.9-31.2-47.6-42.6-73.6l75.5-64.5-6.5-40c-2.4-14.9-3.7-30.3-3.7-45.5 0-15.3 1.2-30.6 3.7-45.5l6.5-40-75.5-64.5c11.3-26.1 25.6-50.7 42.6-73.6l93.4 33.2 31.4-25.9c23.7-19.5 50.2-34.9 78.7-45.7l37.9-14.3 17.9-97.2c28.1-3.2 56.8-3.2 85 0l17.9 97 38.1 14.3c28.7 10.8 55.4 26.2 79.3 45.8l31.4 25.8 92.8-32.9c17 22.9 31.2 47.6 42.6 73.6L781.8 426l6.5 39.9zM512 326c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm79.2 255.2A111.6 111.6 0 01512 614c-29.9 0-58-11.7-79.2-32.8A111.6 111.6 0 01400 502c0-29.9 11.7-58 32.8-79.2C454 401.6 482.1 390 512 390c29.9 0 58 11.6 79.2 32.8A111.6 111.6 0 01624 502c0 29.9-11.7 58-32.8 79.2z\" } }] }, \"name\": \"setting\", \"theme\": \"outlined\" };\nexport default SettingOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport SettingOutlinedSvg from \"@ant-design/icons-svg/es/asn/SettingOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar SettingOutlined = function SettingOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: SettingOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  SettingOutlined.displayName = 'SettingOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(SettingOutlined);","// This icon file is generated automatically.\nvar UserOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M858.5 763.6a374 374 0 00-80.6-119.5 375.63 375.63 0 00-119.5-80.6c-.4-.2-.8-.3-1.2-.5C719.5 518 760 444.7 760 362c0-137-111-248-248-248S264 225 264 362c0 82.7 40.5 156 102.8 201.1-.4.2-.8.3-1.2.5-44.8 18.9-85 46-119.5 80.6a375.63 375.63 0 00-80.6 119.5A371.7 371.7 0 00136 901.8a8 8 0 008 8.2h60c4.4 0 7.9-3.5 8-7.8 2-77.2 33-149.5 87.8-204.3 56.7-56.7 132-87.9 212.2-87.9s155.5 31.2 212.2 87.9C779 752.7 810 825 812 902.2c.1 4.4 3.6 7.8 8 7.8h60a8 8 0 008-8.2c-1-47.8-10.9-94.3-29.5-138.2zM512 534c-45.9 0-89.1-17.9-121.6-50.4S340 407.9 340 362c0-45.9 17.9-89.1 50.4-121.6S466.1 190 512 190s89.1 17.9 121.6 50.4S684 316.1 684 362c0 45.9-17.9 89.1-50.4 121.6S557.9 534 512 534z\" } }] }, \"name\": \"user\", \"theme\": \"outlined\" };\nexport default UserOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport UserOutlinedSvg from \"@ant-design/icons-svg/es/asn/UserOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar UserOutlined = function UserOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: UserOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  UserOutlined.displayName = 'UserOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(UserOutlined);","import { Slot } from '@radix-ui/react-slot';\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst buttonVariants = cva(\n  'inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0',\n  {\n    variants: {\n      variant: {\n        default: 'bg-primary text-primary-foreground hover:bg-primary/90',\n        destructive:\n          'bg-destructive text-destructive-foreground hover:bg-destructive/90',\n        outline:\n          'border border-colors-outline-sentiment-primary bg-background hover:bg-accent hover:text-accent-foreground',\n        secondary:\n          'bg-secondary text-secondary-foreground hover:bg-secondary/80',\n        ghost: 'hover:bg-accent hover:text-accent-foreground',\n        link: 'text-primary underline-offset-4 hover:underline',\n        tertiary:\n          'bg-colors-background-sentiment-solid-primary text-colors-text-persist-light hover:bg-colors-background-sentiment-solid-primary/80',\n        icon: 'bg-colors-background-inverse-standard text-foreground hover:bg-colors-background-inverse-standard/80',\n      },\n      size: {\n        default: 'h-10 px-4 py-2',\n        sm: 'h-9 rounded-md px-3',\n        lg: 'h-11 rounded-md px-8',\n        icon: 'h-10 w-10',\n        auto: 'h-full px-1',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default',\n    },\n  },\n);\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : 'button';\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    );\n  },\n);\nButton.displayName = 'Button';\n\nexport { Button, buttonVariants };\n","import * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      'rounded-lg border bg-card text-card-foreground shadow-sm',\n      className,\n    )}\n    {...props}\n  />\n));\nCard.displayName = 'Card';\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn('flex flex-col space-y-1.5 p-6', className)}\n    {...props}\n  />\n));\nCardHeader.displayName = 'CardHeader';\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      'text-2xl font-semibold leading-none tracking-tight',\n      className,\n    )}\n    {...props}\n  />\n));\nCardTitle.displayName = 'CardTitle';\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn('text-sm text-muted-foreground', className)}\n    {...props}\n  />\n));\nCardDescription.displayName = 'CardDescription';\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn('p-6 pt-0', className)} {...props} />\n));\nCardContent.displayName = 'CardContent';\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn('flex items-center p-6 pt-0', className)}\n    {...props}\n  />\n));\nCardFooter.displayName = 'CardFooter';\n\nexport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n};\n","export enum KnowledgeRouteKey {\n  Dataset = 'dataset',\n  Testing = 'testing',\n  Configuration = 'configuration',\n  KnowledgeGraph = 'knowledgeGraph',\n}\n\nexport const DatasetBaseKey = 'dataset';\n\nexport enum RunningStatus {\n  UNSTART = '0', // need to run\n  RUNNING = '1', // need to cancel\n  CANCEL = '2', // need to refresh\n  DONE = '3', // need to refresh\n  FAIL = '4', // need to refresh\n}\n\nexport enum ModelVariableType {\n  Improvise = 'Improvise',\n  Precise = 'Precise',\n  Balance = 'Balance',\n}\n\nexport const settledModelVariableMap = {\n  [ModelVariableType.Improvise]: {\n    temperature: 0.9,\n    top_p: 0.9,\n    frequency_penalty: 0.2,\n    presence_penalty: 0.4,\n    max_tokens: 512,\n  },\n  [ModelVariableType.Precise]: {\n    temperature: 0.1,\n    top_p: 0.3,\n    frequency_penalty: 0.7,\n    presence_penalty: 0.4,\n    max_tokens: 512,\n  },\n  [ModelVariableType.Balance]: {\n    temperature: 0.5,\n    top_p: 0.5,\n    frequency_penalty: 0.7,\n    presence_penalty: 0.4,\n    max_tokens: 512,\n  },\n};\n\nexport enum LlmModelType {\n  Embedding = 'embedding',\n  Chat = 'chat',\n  Image2text = 'image2text',\n  Speech2text = 'speech2text',\n  Rerank = 'rerank',\n  TTS = 'tts',\n}\n\nexport enum KnowledgeSearchParams {\n  DocumentId = 'doc_id',\n  KnowledgeId = 'id',\n}\n\nexport enum DocumentType {\n  Virtual = 'virtual',\n  Visual = 'visual',\n}\n\nexport enum DocumentParserType {\n  Naive = 'naive',\n  Qa = 'qa',\n  Resume = 'resume',\n  Manual = 'manual',\n  Table = 'table',\n  Paper = 'paper',\n  Book = 'book',\n  Laws = 'laws',\n  Presentation = 'presentation',\n  Picture = 'picture',\n  One = 'one',\n  Audio = 'audio',\n  Email = 'email',\n  Tag = 'tag',\n}\n","import { LlmIcon } from '@/components/svg-icon';\nimport { LlmModelType } from '@/constants/knowledge';\nimport { ResponseGetType } from '@/interfaces/database/base';\nimport {\n  IFactory,\n  IMyLlmValue,\n  IConfiguredLlmValue,\n  IThirdOAIModelCollection as IThirdAiModelCollection,\n  IThirdOAIModelCollection,\n} from '@/interfaces/database/llm';\nimport {\n  IAddLlmRequestBody,\n  IDeleteLlmRequestBody,\n} from '@/interfaces/request/llm';\nimport userService from '@/services/user-service';\nimport { sortLLmFactoryListBySpecifiedOrder } from '@/utils/common-util';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { Flex, message } from 'antd';\nimport { DefaultOptionType } from 'antd/es/select';\nimport { useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport const useFetchLlmList = (\n  modelType?: LlmModelType,\n): IThirdAiModelCollection => {\n  const { data } = useQuery({\n    queryKey: ['llmList'],\n    initialData: {},\n    queryFn: async () => {\n      const { data } = await userService.llm_list({ model_type: modelType });\n\n      return data?.data ?? {};\n    },\n  });\n\n  return data;\n};\n\nexport const useSelectLlmOptions = () => {\n  const llmInfo: IThirdOAIModelCollection = useFetchLlmList();\n\n  const embeddingModelOptions = useMemo(() => {\n    return Object.entries(llmInfo).map(([key, value]) => {\n      return {\n        label: key,\n        options: value.map((x) => ({\n          label: x.llm_name,\n          value: `${x.llm_name}@${x.fid}`,\n          disabled: !x.available,\n        })),\n      };\n    });\n  }, [llmInfo]);\n\n  return embeddingModelOptions;\n};\n\nconst getLLMIconName = (fid: string, llm_name: string) => {\n  if (fid === 'FastEmbed') {\n    return llm_name.split('/').at(0) ?? '';\n  }\n\n  return fid;\n};\n\nexport const useSelectLlmOptionsByModelType = () => {\n  const llmInfo: IThirdOAIModelCollection = useFetchLlmList();\n\n  const groupOptionsByModelType = (modelType: LlmModelType) => {\n    return Object.entries(llmInfo)\n      .filter(([, value]) =>\n        modelType ? value.some((x) => x.model_type.includes(modelType)) : true,\n      )\n      .map(([key, value]) => {\n        return {\n          label: key,\n          options: value\n            .filter(\n              (x) =>\n                (modelType ? x.model_type.includes(modelType) : true) &&\n                x.available,\n            )\n            .map((x) => ({\n              label: (\n                <Flex align=\"center\" gap={6}>\n                  <LlmIcon\n                    name={getLLMIconName(x.fid, x.llm_name)}\n                    width={26}\n                    height={26}\n                    size={'small'}\n                  />\n                  <span>{x.llm_name}</span>\n                </Flex>\n              ),\n              value: `${x.llm_name}@${x.fid}`,\n              disabled: !x.available,\n            })),\n        };\n      })\n      .filter((x) => x.options.length > 0);\n  };\n\n  return {\n    [LlmModelType.Chat]: groupOptionsByModelType(LlmModelType.Chat),\n    [LlmModelType.Embedding]: groupOptionsByModelType(LlmModelType.Embedding),\n    [LlmModelType.Image2text]: groupOptionsByModelType(LlmModelType.Image2text),\n    [LlmModelType.Speech2text]: groupOptionsByModelType(\n      LlmModelType.Speech2text,\n    ),\n    [LlmModelType.Rerank]: groupOptionsByModelType(LlmModelType.Rerank),\n    [LlmModelType.TTS]: groupOptionsByModelType(LlmModelType.TTS),\n  };\n};\n\nexport const useComposeLlmOptionsByModelTypes = (\n  modelTypes: LlmModelType[],\n) => {\n  const allOptions = useSelectLlmOptionsByModelType();\n\n  return modelTypes.reduce<DefaultOptionType[]>((pre, cur) => {\n    const options = allOptions[cur];\n    options.forEach((x) => {\n      const item = pre.find((y) => y.label === x.label);\n      if (item) {\n        item.options.push(...x.options);\n      } else {\n        pre.push(x);\n      }\n    });\n\n    return pre;\n  }, []);\n};\n\nexport const useFetchLlmFactoryList = (): ResponseGetType<IFactory[]> => {\n  const { data, isFetching: loading } = useQuery({\n    queryKey: ['factoryList'],\n    initialData: [],\n    gcTime: 0,\n    queryFn: async () => {\n      const { data } = await userService.factories_list();\n\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading };\n};\n\nexport type LlmItem = { name: string; logo: string } & IMyLlmValue;\n\nexport const useFetchMyLlmList = (): ResponseGetType<\n  Record<string, IMyLlmValue>\n> => {\n  const { data, isFetching: loading } = useQuery({\n    queryKey: ['myLlmList'],\n    initialData: {},\n    gcTime: 0,\n    queryFn: async () => {\n      const { data } = await userService.my_llm();\n\n      return data?.data ?? {};\n    },\n  });\n\n  return { data, loading };\n};\n\n\nexport const useFetchConfiguredLlms = (): ResponseGetType<\n  Record<string, IConfiguredLlmValue>\n> => {\n  const { data, isFetching: loading } = useQuery({\n    queryKey: ['configuredLlmList'],\n    initialData: {},\n    gcTime: 0,\n    queryFn: async () => {\n      const { data } = await userService.configured_llm_list();\n\n      return data?.data ?? {};\n    },\n  });\n\n  return { data, loading };\n};\n\nexport const useSelectLlmList = () => {\n  const { data: myLlmList, loading: myLlmListLoading } = useFetchMyLlmList();\n  const { data: factoryList, loading: factoryListLoading } =\n    useFetchLlmFactoryList();\n\n  const nextMyLlmList: Array<LlmItem> = useMemo(() => {\n    return Object.entries(myLlmList).map(([key, value]) => ({\n      name: key,\n      logo: factoryList.find((x) => x.name === key)?.logo ?? '',\n      ...value,\n    }));\n  }, [myLlmList, factoryList]);\n\n  const nextFactoryList = useMemo(() => {\n    const currentList = factoryList.filter((x) =>\n      Object.keys(myLlmList).every((y) => y !== x.name),\n    );\n    return sortLLmFactoryListBySpecifiedOrder(currentList);\n  }, [factoryList, myLlmList]);\n\n  return {\n    myLlmList: nextMyLlmList,\n    factoryList: nextFactoryList,\n    loading: myLlmListLoading || factoryListLoading,\n  };\n};\n\nexport interface IApiKeySavingParams {\n  llm_factory: string;\n  api_key: string;\n  llm_name?: string;\n  model_type?: string;\n  base_url?: string;\n}\n\nexport const useSaveApiKey = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['saveApiKey'],\n    mutationFn: async (params: IApiKeySavingParams) => {\n      const { data } = await userService.set_api_key(params);\n      if (data.code === 0) {\n        message.success(t('message.modified'));\n        queryClient.invalidateQueries({ queryKey: ['myLlmList'] });\n        queryClient.invalidateQueries({ queryKey: ['factoryList'] });\n      }\n      return data.code;\n    },\n  });\n\n  return { data, loading, saveApiKey: mutateAsync };\n};\n\nexport interface ISystemModelSettingSavingParams {\n  tenant_id: string;\n  name?: string;\n  asr_id: string;\n  embd_id: string;\n  img2txt_id: string;\n  llm_id: string;\n}\n\nexport const useSaveTenantInfo = () => {\n  const { t } = useTranslation();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['saveTenantInfo'],\n    mutationFn: async (params: ISystemModelSettingSavingParams) => {\n      const { data } = await userService.set_tenant_info(params);\n      if (data.code === 0) {\n        message.success(t('message.modified'));\n      }\n      return data.code;\n    },\n  });\n\n  return { data, loading, saveTenantInfo: mutateAsync };\n};\n\nexport const useAddLlm = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['addLlm'],\n    mutationFn: async (params: IAddLlmRequestBody) => {\n      const { data } = await userService.add_llm(params);\n      if (data.code === 0) {\n        queryClient.invalidateQueries({ queryKey: ['myLlmList'] });\n        queryClient.invalidateQueries({ queryKey: ['factoryList'] });\n        message.success(t('message.modified'));\n      }\n      return data.code;\n    },\n  });\n\n  return { data, loading, addLlm: mutateAsync };\n};\n\nexport const useDeleteLlm = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['deleteLlm'],\n    mutationFn: async (params: IDeleteLlmRequestBody) => {\n      const { data } = await userService.delete_llm(params);\n      if (data.code === 0) {\n        queryClient.invalidateQueries({ queryKey: ['myLlmList'] });\n        queryClient.invalidateQueries({ queryKey: ['factoryList'] });\n        message.success(t('message.deleted'));\n      }\n      return data.code;\n    },\n  });\n\n  return { data, loading, deleteLlm: mutateAsync };\n};\n\nexport const useDeleteFactory = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['deleteFactory'],\n    mutationFn: async (params: IDeleteLlmRequestBody) => {\n      const { data } = await userService.deleteFactory(params);\n      if (data.code === 0) {\n        queryClient.invalidateQueries({ queryKey: ['myLlmList'] });\n        queryClient.invalidateQueries({ queryKey: ['factoryList'] });\n        message.success(t('message.deleted'));\n      }\n      return data.code;\n    },\n  });\n\n  return { data, loading, deleteFactory: mutateAsync };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"knowledge\":\"knowledge___dBUDs\",\"topWrapper\":\"topWrapper___O_TN2\",\"title\":\"title___Eh5Dp\",\"description\":\"description___RqthR\",\"topButton\":\"topButton___Sfvjb\",\"filterButton\":\"filterButton___eYXl8\",\"knowledgeCardContainer\":\"knowledgeCardContainer___AReEl\",\"knowledgeEmpty\":\"knowledgeEmpty___bpJl4\"};","import { IModalManagerChildrenProps } from '@/components/modal-manager';\nimport { useTranslate } from '@/hooks/common-hooks';\nimport { Form, Input, Modal } from 'antd';\nimport { useEffect } from 'react';\nimport { ApiKeyPostBody } from '../../interface';\n\ninterface IProps extends Omit<IModalManagerChildrenProps, 'showModal'> {\n  loading: boolean;\n  initialValue: string;\n  llmFactory: string;\n  onOk: (postBody: ApiKeyPostBody) => void;\n  showModal?(): void;\n}\n\ntype FieldType = {\n  api_key?: string;\n  base_url?: string;\n  group_id?: string;\n};\n\nconst modelsWithBaseUrl = ['OpenAI', 'Azure-OpenAI'];\n\nconst ApiKeyModal = ({\n  visible,\n  hideModal,\n  llmFactory,\n  loading,\n  initialValue,\n  onOk,\n}: IProps) => {\n  const [form] = Form.useForm();\n  const { t } = useTranslate('setting');\n\n  const handleOk = async () => {\n    const ret = await form.validateFields();\n\n    return onOk(ret);\n  };\n\n  useEffect(() => {\n    if (visible) {\n      form.setFieldValue('api_key', initialValue);\n    }\n  }, [initialValue, form, visible]);\n\n  return (\n    <Modal\n      title={t('modify')}\n      open={visible}\n      onOk={handleOk}\n      onCancel={hideModal}\n      okButtonProps={{ loading }}\n      confirmLoading={loading}\n    >\n      <Form\n        name=\"basic\"\n        labelCol={{ span: 6 }}\n        wrapperCol={{ span: 18 }}\n        style={{ maxWidth: 600 }}\n        autoComplete=\"off\"\n        form={form}\n      >\n        <Form.Item<FieldType>\n          label={t('apiKey')}\n          name=\"api_key\"\n          tooltip={t('apiKeyTip')}\n          rules={[{ required: true, message: t('apiKeyMessage') }]}\n        >\n          <Input />\n        </Form.Item>\n        {modelsWithBaseUrl.some((x) => x === llmFactory) && (\n          <Form.Item<FieldType>\n            label={t('baseUrl')}\n            name=\"base_url\"\n            tooltip={t('baseUrlTip')}\n          >\n            <Input placeholder=\"https://api.openai.com/v1\" />\n          </Form.Item>\n        )}\n        {llmFactory?.toLowerCase() === 'Minimax'.toLowerCase() && (\n          <Form.Item<FieldType> label={'Group ID'} name=\"group_id\">\n            <Input />\n          </Form.Item>\n        )}\n      </Form>\n    </Modal>\n  );\n};\n\nexport default ApiKeyModal;\n","import {\n  ApiIcon,\n  LogOutIcon,\n  ModelProviderIcon,\n  PasswordIcon,\n  ProfileIcon,\n  TeamIcon,\n} from '@/assets/icon/Icon';\nimport { UserSettingRouteKey } from '@/constants/setting';\nimport { MonitorOutlined } from '@ant-design/icons';\n\nexport const UserSettingIconMap = {\n  [UserSettingRouteKey.Profile]: <ProfileIcon />,\n  [UserSettingRouteKey.Password]: <PasswordIcon />,\n  [UserSettingRouteKey.Model]: <ModelProviderIcon />,\n  [UserSettingRouteKey.System]: <MonitorOutlined style={{ fontSize: 24 }} />,\n  [UserSettingRouteKey.Team]: <TeamIcon />,\n  [UserSettingRouteKey.Logout]: <LogOutIcon />,\n  [UserSettingRouteKey.Api]: <ApiIcon />,\n};\n\nexport * from '@/constants/setting';\n\nexport const LocalLlmFactories = [\n  'Ollama',\n  'Xinference',\n  'LocalAI',\n  'LM-Studio',\n  'OpenAI-API-Compatible',\n  'TogetherAI',\n  'Replicate',\n  'OpenRouter',\n  'HuggingFace',\n  'GPUStack',\n];\n\nexport enum TenantRole {\n  Owner = 'owner',\n  Invite = 'invite',\n  Normal = 'normal',\n}\n","import { useTranslate } from '@/hooks/common-hooks';\nimport { IModalProps } from '@/interfaces/common';\nimport { IAddLlmRequestBody } from '@/interfaces/request/llm';\nimport { Form, Input, InputNumber, Modal, Select, Switch } from 'antd';\nimport omit from 'lodash/omit';\n\ntype FieldType = IAddLlmRequestBody & {\n  api_version: string;\n  vision: boolean;\n};\n\nconst { Option } = Select;\n\nconst AzureOpenAIModal = ({\n  visible,\n  hideModal,\n  onOk,\n  loading,\n  llmFactory,\n}: IModalProps<IAddLlmRequestBody> & { llmFactory: string }) => {\n  const [form] = Form.useForm<FieldType>();\n\n  const { t } = useTranslate('setting');\n\n  const handleOk = async () => {\n    const values = await form.validateFields();\n    const modelType =\n      values.model_type === 'chat' && values.vision\n        ? 'image2text'\n        : values.model_type;\n\n    const data = {\n      ...omit(values, ['vision']),\n      model_type: modelType,\n      llm_factory: llmFactory,\n      max_tokens: values.max_tokens,\n    };\n    console.info(data);\n\n    onOk?.(data);\n  };\n  const optionsMap = {\n    Default: [\n      { value: 'chat', label: 'chat' },\n      { value: 'embedding', label: 'embedding' },\n      { value: 'image2text', label: 'image2text' },\n    ],\n  };\n  const getOptions = (factory: string) => {\n    return optionsMap.Default;\n  };\n  return (\n    <Modal\n      title={t('addLlmTitle', { name: llmFactory })}\n      open={visible}\n      onOk={handleOk}\n      onCancel={hideModal}\n      okButtonProps={{ loading }}\n    >\n      <Form\n        name=\"basic\"\n        style={{ maxWidth: 600 }}\n        autoComplete=\"off\"\n        layout={'vertical'}\n        form={form}\n      >\n        <Form.Item<FieldType>\n          label={t('modelType')}\n          name=\"model_type\"\n          initialValue={'embedding'}\n          rules={[{ required: true, message: t('modelTypeMessage') }]}\n        >\n          <Select placeholder={t('modelTypeMessage')}>\n            {getOptions(llmFactory).map((option) => (\n              <Option key={option.value} value={option.value}>\n                {option.label}\n              </Option>\n            ))}\n          </Select>\n        </Form.Item>\n        <Form.Item<FieldType>\n          label={t('addLlmBaseUrl')}\n          name=\"api_base\"\n          rules={[{ required: true, message: t('baseUrlNameMessage') }]}\n        >\n          <Input placeholder={t('baseUrlNameMessage')} />\n        </Form.Item>\n        <Form.Item<FieldType>\n          label={t('apiKey')}\n          name=\"api_key\"\n          rules={[{ required: false, message: t('apiKeyMessage') }]}\n        >\n          <Input placeholder={t('apiKeyMessage')} />\n        </Form.Item>\n        <Form.Item<FieldType>\n          label={t('modelName')}\n          name=\"llm_name\"\n          initialValue=\"gpt-3.5-turbo\"\n          rules={[{ required: true, message: t('modelNameMessage') }]}\n        >\n          <Input placeholder={t('modelNameMessage')} />\n        </Form.Item>\n        <Form.Item<FieldType>\n          label={t('apiVersion')}\n          name=\"api_version\"\n          initialValue=\"2024-02-01\"\n          rules={[{ required: false, message: t('apiVersionMessage') }]}\n        >\n          <Input placeholder={t('apiVersionMessage')} />\n        </Form.Item>\n        <Form.Item<FieldType>\n          label={t('maxTokens')}\n          name=\"max_tokens\"\n          rules={[\n            { required: true, message: t('maxTokensMessage') },\n            {\n              type: 'number',\n              message: t('maxTokensInvalidMessage'),\n            },\n            ({ getFieldValue }) => ({\n              validator(_, value) {\n                if (value < 0) {\n                  return Promise.reject(new Error(t('maxTokensMinMessage')));\n                }\n                return Promise.resolve();\n              },\n            }),\n          ]}\n        >\n          <InputNumber\n            placeholder={t('maxTokensTip')}\n            style={{ width: '100%' }}\n          />\n        </Form.Item>\n\n        <Form.Item noStyle dependencies={['model_type']}>\n          {({ getFieldValue }) =>\n            getFieldValue('model_type') === 'chat' && (\n              <Form.Item\n                label={t('vision')}\n                valuePropName=\"checked\"\n                name={'vision'}\n              >\n                <Switch />\n              </Form.Item>\n            )\n          }\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default AzureOpenAIModal;\n","import { useTranslate } from '@/hooks/common-hooks';\nimport { IModalProps } from '@/interfaces/common';\nimport { IAddLlmRequestBody } from '@/interfaces/request/llm';\nimport { Form, Input, InputNumber, Modal, Select } from 'antd';\n\ntype FieldType = IAddLlmRequestBody & {\n  google_project_id: string;\n  google_region: string;\n  google_service_account_key: string;\n};\n\nconst { Option } = Select;\n\nconst GoogleModal = ({\n  visible,\n  hideModal,\n  onOk,\n  loading,\n  llmFactory,\n}: IModalProps<IAddLlmRequestBody> & { llmFactory: string }) => {\n  const [form] = Form.useForm<FieldType>();\n\n  const { t } = useTranslate('setting');\n  const handleOk = async () => {\n    const values = await form.validateFields();\n\n    const data = {\n      ...values,\n      llm_factory: llmFactory,\n      max_tokens: values.max_tokens,\n    };\n\n    onOk?.(data);\n  };\n\n  return (\n    <Modal\n      title={t('addLlmTitle', { name: llmFactory })}\n      open={visible}\n      onOk={handleOk}\n      onCancel={hideModal}\n      okButtonProps={{ loading }}\n    >\n      <Form\n        name=\"basic\"\n        style={{ maxWidth: 600 }}\n        autoComplete=\"off\"\n        layout={'vertical'}\n        form={form}\n      >\n        <Form.Item<FieldType>\n          label={t('modelType')}\n          name=\"model_type\"\n          initialValue={'chat'}\n          rules={[{ required: true, message: t('modelTypeMessage') }]}\n        >\n          <Select placeholder={t('modelTypeMessage')}>\n            <Option value=\"chat\">chat</Option>\n          </Select>\n        </Form.Item>\n        <Form.Item<FieldType>\n          label={t('modelID')}\n          name=\"llm_name\"\n          rules={[{ required: true, message: t('GoogleModelIDMessage') }]}\n        >\n          <Input placeholder={t('GoogleModelIDMessage')} />\n        </Form.Item>\n        <Form.Item<FieldType>\n          label={t('addGoogleProjectID')}\n          name=\"google_project_id\"\n          rules={[{ required: true, message: t('GoogleProjectIDMessage') }]}\n        >\n          <Input placeholder={t('GoogleProjectIDMessage')} />\n        </Form.Item>\n        <Form.Item<FieldType>\n          label={t('addGoogleRegion')}\n          name=\"google_region\"\n          rules={[{ required: true, message: t('GoogleRegionMessage') }]}\n        >\n          <Input placeholder={t('GoogleRegionMessage')} />\n        </Form.Item>\n        <Form.Item<FieldType>\n          label={t('addGoogleServiceAccountKey')}\n          name=\"google_service_account_key\"\n          rules={[\n            { required: true, message: t('GoogleServiceAccountKeyMessage') },\n          ]}\n        >\n          <Input placeholder={t('GoogleServiceAccountKeyMessage')} />\n        </Form.Item>\n        <Form.Item<FieldType>\n          label={t('maxTokens')}\n          name=\"max_tokens\"\n          rules={[\n            { required: true, message: t('maxTokensMessage') },\n            {\n              type: 'number',\n              message: t('maxTokensInvalidMessage'),\n            },\n            ({ getFieldValue }) => ({\n              validator(_, value) {\n                if (value < 0) {\n                  return Promise.reject(new Error(t('maxTokensMinMessage')));\n                }\n                return Promise.resolve();\n              },\n            }),\n          ]}\n        >\n          <InputNumber\n            placeholder={t('maxTokensTip')}\n            style={{ width: '100%' }}\n          />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default GoogleModal;\n","import { useTranslate } from '@/hooks/common-hooks';\nimport { IModalProps } from '@/interfaces/common';\nimport { IAddLlmRequestBody } from '@/interfaces/request/llm';\nimport {\n  Flex,\n  Form,\n  Input,\n  InputNumber,\n  Modal,\n  Select,\n  Space,\n  Switch,\n} from 'antd';\nimport omit from 'lodash/omit';\n\ntype FieldType = IAddLlmRequestBody & { vision: boolean };\n\nconst { Option } = Select;\n\nconst llmFactoryToUrlMap = {\n  Ollama:\n    'https://github.com/infiniflow/ragflow/blob/main/docs/guides/deploy_local_llm.mdx',\n  Xinference: 'https://inference.readthedocs.io/en/latest/user_guide',\n  LocalAI: 'https://localai.io/docs/getting-started/models/',\n  'LM-Studio': 'https://lmstudio.ai/docs/basics',\n  'OpenAI-API-Compatible': 'https://platform.openai.com/docs/models/gpt-4',\n  TogetherAI: 'https://docs.together.ai/docs/deployment-options',\n  Replicate: 'https://replicate.com/docs/topics/deployments',\n  OpenRouter: 'https://openrouter.ai/docs',\n  HuggingFace:\n    'https://huggingface.co/docs/text-embeddings-inference/quick_tour',\n  GPUStack: 'https://docs.gpustack.ai/latest/quickstart',\n};\ntype LlmFactory = keyof typeof llmFactoryToUrlMap;\n\nconst OllamaModal = ({\n  visible,\n  hideModal,\n  onOk,\n  loading,\n  llmFactory,\n}: IModalProps<IAddLlmRequestBody> & { llmFactory: string }) => {\n  const [form] = Form.useForm<FieldType>();\n\n  const { t } = useTranslate('setting');\n\n  const handleOk = async () => {\n    const values = await form.validateFields();\n    const modelType =\n      values.model_type === 'chat' && values.vision\n        ? 'image2text'\n        : values.model_type;\n\n    const data = {\n      ...omit(values, ['vision']),\n      model_type: modelType,\n      llm_factory: llmFactory,\n      max_tokens: values.max_tokens,\n    };\n    console.info(data);\n\n    onOk?.(data);\n  };\n  const url =\n    llmFactoryToUrlMap[llmFactory as LlmFactory] ||\n    'https://github.com/infiniflow/ragflow/blob/main/docs/guides/deploy_local_llm.mdx';\n  const optionsMap = {\n    HuggingFace: [\n      { value: 'embedding', label: 'embedding' },\n      { value: 'chat', label: 'chat' },\n    ],\n    Xinference: [\n      { value: 'chat', label: 'chat' },\n      { value: 'embedding', label: 'embedding' },\n      { value: 'rerank', label: 'rerank' },\n      { value: 'image2text', label: 'image2text' },\n      { value: 'speech2text', label: 'sequence2text' },\n      { value: 'tts', label: 'tts' },\n    ],\n    GPUStack: [\n      { value: 'chat', label: 'chat' },\n      { value: 'embedding', label: 'embedding' },\n      { value: 'rerank', label: 'rerank' },\n      { value: 'speech2text', label: 'sequence2text' },\n      { value: 'tts', label: 'tts' },\n    ],\n    Default: [\n      { value: 'chat', label: 'chat' },\n      { value: 'embedding', label: 'embedding' },\n      { value: 'rerank', label: 'rerank' },\n      { value: 'image2text', label: 'image2text' },\n    ],\n  };\n  const getOptions = (factory: string) => {\n    return optionsMap[factory as keyof typeof optionsMap] || optionsMap.Default;\n  };\n  return (\n    <Modal\n      title={t('addLlmTitle', { name: llmFactory })}\n      open={visible}\n      onOk={handleOk}\n      onCancel={hideModal}\n      okButtonProps={{ loading }}\n      footer={(originNode: React.ReactNode) => {\n        return (\n          <Flex justify={'space-between'}>\n            {/**/}<a href={url} target=\"_blank\" rel=\"noreferrer\">\n              \n            </a>\n            <Space>{originNode}</Space>\n          </Flex>\n        );\n      }}\n    >\n      <Form\n        name=\"basic\"\n        style={{ maxWidth: 600 }}\n        autoComplete=\"off\"\n        layout={'vertical'}\n        form={form}\n      >\n        <Form.Item<FieldType>\n          label={t('modelType')}\n          name=\"model_type\"\n          initialValue={'embedding'}\n          rules={[{ required: true, message: t('modelTypeMessage') }]}\n        >\n          <Select placeholder={t('modelTypeMessage')}>\n            {getOptions(llmFactory).map((option) => (\n              <Option key={option.value} value={option.value}>\n                {option.label}\n              </Option>\n            ))}\n          </Select>\n        </Form.Item>\n        <Form.Item<FieldType>\n          label={t(llmFactory === 'Xinference' ? 'modelUid' : 'modelName')}\n          name=\"llm_name\"\n          rules={[{ required: true, message: t('modelNameMessage') }]}\n        >\n          <Input placeholder={t('modelNameMessage')} />\n        </Form.Item>\n        <Form.Item<FieldType>\n          label={t('addLlmBaseUrl')}\n          name=\"api_base\"\n          rules={[{ required: true, message: t('baseUrlNameMessage') }]}\n        >\n          <Input placeholder={t('baseUrlNameMessage')} />\n        </Form.Item>\n        <Form.Item<FieldType>\n          label={t('apiKey')}\n          name=\"api_key\"\n          rules={[{ required: false, message: t('apiKeyMessage') }]}\n        >\n          <Input placeholder={t('apiKeyMessage')} />\n        </Form.Item>\n        <Form.Item<FieldType>\n          label={t('maxTokens')}\n          name=\"max_tokens\"\n          rules={[\n            { required: true, message: t('maxTokensMessage') },\n            {\n              type: 'number',\n              message: t('maxTokensInvalidMessage'),\n            },\n            ({ getFieldValue }) => ({\n              validator(_, value) {\n                if (value < 0) {\n                  return Promise.reject(new Error(t('maxTokensMinMessage')));\n                }\n                return Promise.resolve();\n              },\n            }),\n          ]}\n        >\n          <InputNumber\n            placeholder={t('maxTokensTip')}\n            style={{ width: '100%' }}\n          />\n        </Form.Item>\n\n        <Form.Item noStyle dependencies={['model_type']}>\n          {({ getFieldValue }) =>\n            getFieldValue('model_type') === 'chat' && (\n              <Form.Item\n                label={t('vision')}\n                valuePropName=\"checked\"\n                name={'vision'}\n              >\n                <Switch />\n              </Form.Item>\n            )\n          }\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default OllamaModal;\n","import { IModalManagerChildrenProps } from '@/components/modal-manager';\nimport { LlmModelType } from '@/constants/knowledge';\nimport { useTranslate } from '@/hooks/common-hooks';\nimport { ISystemModelSettingSavingParams } from '@/hooks/llm-hooks';\nimport { Form, Modal, Select } from 'antd';\nimport { useEffect } from 'react';\nimport { useFetchSystemModelSettingOnMount } from '../hooks';\n\ninterface IProps extends Omit<IModalManagerChildrenProps, 'showModal'> {\n  loading: boolean;\n  onOk: (\n    payload: Omit<ISystemModelSettingSavingParams, 'tenant_id' | 'name'>,\n  ) => void;\n}\n\nconst SystemModelSettingModal = ({\n  visible,\n  hideModal,\n  onOk,\n  loading,\n}: IProps) => {\n  const [form] = Form.useForm();\n  const { systemSetting: initialValues, allOptions } =\n    useFetchSystemModelSettingOnMount();\n  const { t } = useTranslate('setting');\n\n  const handleOk = async () => {\n    const values = await form.validateFields();\n    onOk({\n      ...values,\n      asr_id: values.asr_id ?? '',\n      embd_id: values.embd_id ?? '',\n      img2txt_id: values.img2txt_id ?? '',\n      llm_id: values.llm_id ?? '',\n    });\n  };\n\n  useEffect(() => {\n    if (visible) {\n      form.setFieldsValue(initialValues);\n    }\n  }, [form, initialValues, visible]);\n\n  const onFormLayoutChange = () => {};\n\n  return (\n    <Modal\n      title={t('systemModelSettings')}\n      open={visible}\n      onOk={handleOk}\n      onCancel={hideModal}\n      okButtonProps={{ loading }}\n      confirmLoading={loading}\n    >\n      <Form form={form} onValuesChange={onFormLayoutChange} layout={'vertical'}>\n        <Form.Item\n          label={t('chatModel')}\n          name=\"llm_id\"\n          tooltip={t('chatModelTip')}\n        >\n          <Select\n            options={[\n              ...allOptions[LlmModelType.Chat],\n              ...allOptions[LlmModelType.Image2text],\n            ]}\n            allowClear\n          />\n        </Form.Item>\n        <Form.Item\n          label={t('embeddingModel')}\n          name=\"embd_id\"\n          tooltip={t('embeddingModelTip')}\n        >\n          <Select options={allOptions[LlmModelType.Embedding]} allowClear />\n        </Form.Item>\n        <Form.Item\n          label={t('img2txtModel')}\n          name=\"img2txt_id\"\n          tooltip={t('img2txtModelTip')}\n        >\n          <Select options={allOptions[LlmModelType.Image2text]} allowClear />\n        </Form.Item>\n\n        <Form.Item\n          label={t('sequence2txtModel')}\n          name=\"asr_id\"\n          tooltip={t('sequence2txtModelTip')}\n        >\n          <Select options={allOptions[LlmModelType.Speech2text]} allowClear />\n        </Form.Item>\n        <Form.Item\n          label={t('rerankModel')}\n          name=\"rerank_id\"\n          tooltip={t('rerankModelTip')}\n        >\n          <Select options={allOptions[LlmModelType.Rerank]} allowClear />\n        </Form.Item>\n        <Form.Item\n          label={t('ttsModel')}\n          name=\"tts_id\"\n          tooltip={t('ttsModelTip')}\n        >\n          <Select options={allOptions[LlmModelType.TTS]} allowClear />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default SystemModelSettingModal;\n","import { useSetModalState, useShowDeleteConfirm } from '@/hooks/common-hooks';\nimport {\n  IApiKeySavingParams,\n  ISystemModelSettingSavingParams,\n  useAddLlm,\n  useDeleteFactory,\n  useDeleteLlm,\n  useSaveApiKey,\n  useSaveTenantInfo,\n  useSelectLlmOptionsByModelType,\n} from '@/hooks/llm-hooks';\nimport { useFetchTenantInfo } from '@/hooks/user-setting-hooks';\nimport { IAddLlmRequestBody } from '@/interfaces/request/llm';\nimport { useCallback, useState } from 'react';\nimport { ApiKeyPostBody } from '../interface';\n\ntype SavingParamsState = Omit<IApiKeySavingParams, 'api_key'>;\n\nexport const useSubmitApiKey = () => {\n  const [savingParams, setSavingParams] = useState<SavingParamsState>(\n    {} as SavingParamsState,\n  );\n  const { saveApiKey, loading } = useSaveApiKey();\n  const {\n    visible: apiKeyVisible,\n    hideModal: hideApiKeyModal,\n    showModal: showApiKeyModal,\n  } = useSetModalState();\n\n  const onApiKeySavingOk = useCallback(\n    async (postBody: ApiKeyPostBody) => {\n      const ret = await saveApiKey({\n        ...savingParams,\n        ...postBody,\n      });\n\n      if (ret === 0) {\n        hideApiKeyModal();\n      }\n    },\n    [hideApiKeyModal, saveApiKey, savingParams],\n  );\n\n  const onShowApiKeyModal = useCallback(\n    (savingParams: SavingParamsState) => {\n      setSavingParams(savingParams);\n      showApiKeyModal();\n    },\n    [showApiKeyModal, setSavingParams],\n  );\n\n  return {\n    saveApiKeyLoading: loading,\n    initialApiKey: '',\n    llmFactory: savingParams.llm_factory,\n    onApiKeySavingOk,\n    apiKeyVisible,\n    hideApiKeyModal,\n    showApiKeyModal: onShowApiKeyModal,\n  };\n};\n\nexport const useSubmitSystemModelSetting = () => {\n  const { data: systemSetting } = useFetchTenantInfo();\n  const { saveTenantInfo: saveSystemModelSetting, loading } =\n    useSaveTenantInfo();\n  const {\n    visible: systemSettingVisible,\n    hideModal: hideSystemSettingModal,\n    showModal: showSystemSettingModal,\n  } = useSetModalState();\n\n  const onSystemSettingSavingOk = useCallback(\n    async (\n      payload: Omit<ISystemModelSettingSavingParams, 'tenant_id' | 'name'>,\n    ) => {\n      const ret = await saveSystemModelSetting({\n        tenant_id: systemSetting.tenant_id,\n        name: systemSetting.name,\n        ...payload,\n      });\n\n      if (ret === 0) {\n        hideSystemSettingModal();\n      }\n    },\n    [hideSystemSettingModal, saveSystemModelSetting, systemSetting],\n  );\n\n  return {\n    saveSystemModelSettingLoading: loading,\n    onSystemSettingSavingOk,\n    systemSettingVisible,\n    hideSystemSettingModal,\n    showSystemSettingModal,\n  };\n};\n\nexport const useFetchSystemModelSettingOnMount = () => {\n  const { data: systemSetting } = useFetchTenantInfo();\n  const allOptions = useSelectLlmOptionsByModelType();\n\n  return { systemSetting, allOptions };\n};\n\nexport const useSubmitOllama = () => {\n  const [selectedLlmFactory, setSelectedLlmFactory] = useState<string>('');\n  const { addLlm, loading } = useAddLlm();\n  const {\n    visible: llmAddingVisible,\n    hideModal: hideLlmAddingModal,\n    showModal: showLlmAddingModal,\n  } = useSetModalState();\n\n  const onLlmAddingOk = useCallback(\n    async (payload: IAddLlmRequestBody) => {\n      const ret = await addLlm(payload);\n      if (ret === 0) {\n        hideLlmAddingModal();\n      }\n    },\n    [hideLlmAddingModal, addLlm],\n  );\n\n  const handleShowLlmAddingModal = (llmFactory: string) => {\n    setSelectedLlmFactory(llmFactory);\n    showLlmAddingModal();\n  };\n\n  return {\n    llmAddingLoading: loading,\n    onLlmAddingOk,\n    llmAddingVisible,\n    hideLlmAddingModal,\n    showLlmAddingModal: handleShowLlmAddingModal,\n    selectedLlmFactory,\n  };\n};\n\nexport const useSubmitVolcEngine = () => {\n  const { addLlm, loading } = useAddLlm();\n  const {\n    visible: volcAddingVisible,\n    hideModal: hideVolcAddingModal,\n    showModal: showVolcAddingModal,\n  } = useSetModalState();\n\n  const onVolcAddingOk = useCallback(\n    async (payload: IAddLlmRequestBody) => {\n      const ret = await addLlm(payload);\n      if (ret === 0) {\n        hideVolcAddingModal();\n      }\n    },\n    [hideVolcAddingModal, addLlm],\n  );\n\n  return {\n    volcAddingLoading: loading,\n    onVolcAddingOk,\n    volcAddingVisible,\n    hideVolcAddingModal,\n    showVolcAddingModal,\n  };\n};\n\nexport const useSubmitHunyuan = () => {\n  const { addLlm, loading } = useAddLlm();\n  const {\n    visible: HunyuanAddingVisible,\n    hideModal: hideHunyuanAddingModal,\n    showModal: showHunyuanAddingModal,\n  } = useSetModalState();\n\n  const onHunyuanAddingOk = useCallback(\n    async (payload: IAddLlmRequestBody) => {\n      const ret = await addLlm(payload);\n      if (ret === 0) {\n        hideHunyuanAddingModal();\n      }\n    },\n    [hideHunyuanAddingModal, addLlm],\n  );\n\n  return {\n    HunyuanAddingLoading: loading,\n    onHunyuanAddingOk,\n    HunyuanAddingVisible,\n    hideHunyuanAddingModal,\n    showHunyuanAddingModal,\n  };\n};\n\nexport const useSubmitTencentCloud = () => {\n  const { addLlm, loading } = useAddLlm();\n  const {\n    visible: TencentCloudAddingVisible,\n    hideModal: hideTencentCloudAddingModal,\n    showModal: showTencentCloudAddingModal,\n  } = useSetModalState();\n\n  const onTencentCloudAddingOk = useCallback(\n    async (payload: IAddLlmRequestBody) => {\n      const ret = await addLlm(payload);\n      if (ret === 0) {\n        hideTencentCloudAddingModal();\n      }\n    },\n    [hideTencentCloudAddingModal, addLlm],\n  );\n\n  return {\n    TencentCloudAddingLoading: loading,\n    onTencentCloudAddingOk,\n    TencentCloudAddingVisible,\n    hideTencentCloudAddingModal,\n    showTencentCloudAddingModal,\n  };\n};\n\nexport const useSubmitSpark = () => {\n  const { addLlm, loading } = useAddLlm();\n  const {\n    visible: SparkAddingVisible,\n    hideModal: hideSparkAddingModal,\n    showModal: showSparkAddingModal,\n  } = useSetModalState();\n\n  const onSparkAddingOk = useCallback(\n    async (payload: IAddLlmRequestBody) => {\n      const ret = await addLlm(payload);\n      if (ret === 0) {\n        hideSparkAddingModal();\n      }\n    },\n    [hideSparkAddingModal, addLlm],\n  );\n\n  return {\n    SparkAddingLoading: loading,\n    onSparkAddingOk,\n    SparkAddingVisible,\n    hideSparkAddingModal,\n    showSparkAddingModal,\n  };\n};\n\nexport const useSubmityiyan = () => {\n  const { addLlm, loading } = useAddLlm();\n  const {\n    visible: yiyanAddingVisible,\n    hideModal: hideyiyanAddingModal,\n    showModal: showyiyanAddingModal,\n  } = useSetModalState();\n\n  const onyiyanAddingOk = useCallback(\n    async (payload: IAddLlmRequestBody) => {\n      const ret = await addLlm(payload);\n      if (ret === 0) {\n        hideyiyanAddingModal();\n      }\n    },\n    [hideyiyanAddingModal, addLlm],\n  );\n\n  return {\n    yiyanAddingLoading: loading,\n    onyiyanAddingOk,\n    yiyanAddingVisible,\n    hideyiyanAddingModal,\n    showyiyanAddingModal,\n  };\n};\n\nexport const useSubmitFishAudio = () => {\n  const { addLlm, loading } = useAddLlm();\n  const {\n    visible: FishAudioAddingVisible,\n    hideModal: hideFishAudioAddingModal,\n    showModal: showFishAudioAddingModal,\n  } = useSetModalState();\n\n  const onFishAudioAddingOk = useCallback(\n    async (payload: IAddLlmRequestBody) => {\n      const ret = await addLlm(payload);\n      if (ret === 0) {\n        hideFishAudioAddingModal();\n      }\n    },\n    [hideFishAudioAddingModal, addLlm],\n  );\n\n  return {\n    FishAudioAddingLoading: loading,\n    onFishAudioAddingOk,\n    FishAudioAddingVisible,\n    hideFishAudioAddingModal,\n    showFishAudioAddingModal,\n  };\n};\n\nexport const useSubmitGoogle = () => {\n  const { addLlm, loading } = useAddLlm();\n  const {\n    visible: GoogleAddingVisible,\n    hideModal: hideGoogleAddingModal,\n    showModal: showGoogleAddingModal,\n  } = useSetModalState();\n\n  const onGoogleAddingOk = useCallback(\n    async (payload: IAddLlmRequestBody) => {\n      const ret = await addLlm(payload);\n      if (ret === 0) {\n        hideGoogleAddingModal();\n      }\n    },\n    [hideGoogleAddingModal, addLlm],\n  );\n\n  return {\n    GoogleAddingLoading: loading,\n    onGoogleAddingOk,\n    GoogleAddingVisible,\n    hideGoogleAddingModal,\n    showGoogleAddingModal,\n  };\n};\n\nexport const useSubmitBedrock = () => {\n  const { addLlm, loading } = useAddLlm();\n  const {\n    visible: bedrockAddingVisible,\n    hideModal: hideBedrockAddingModal,\n    showModal: showBedrockAddingModal,\n  } = useSetModalState();\n\n  const onBedrockAddingOk = useCallback(\n    async (payload: IAddLlmRequestBody) => {\n      const ret = await addLlm(payload);\n      if (ret === 0) {\n        hideBedrockAddingModal();\n      }\n    },\n    [hideBedrockAddingModal, addLlm],\n  );\n\n  return {\n    bedrockAddingLoading: loading,\n    onBedrockAddingOk,\n    bedrockAddingVisible,\n    hideBedrockAddingModal,\n    showBedrockAddingModal,\n  };\n};\n\nexport const useSubmitAzure = () => {\n  const { addLlm, loading } = useAddLlm();\n  const {\n    visible: AzureAddingVisible,\n    hideModal: hideAzureAddingModal,\n    showModal: showAzureAddingModal,\n  } = useSetModalState();\n\n  const onAzureAddingOk = useCallback(\n    async (payload: IAddLlmRequestBody) => {\n      const ret = await addLlm(payload);\n      if (ret === 0) {\n        hideAzureAddingModal();\n      }\n    },\n    [hideAzureAddingModal, addLlm],\n  );\n\n  return {\n    AzureAddingLoading: loading,\n    onAzureAddingOk,\n    AzureAddingVisible,\n    hideAzureAddingModal,\n    showAzureAddingModal,\n  };\n};\n\nexport const useHandleDeleteLlm = (llmFactory: string) => {\n  const { deleteLlm } = useDeleteLlm();\n  const showDeleteConfirm = useShowDeleteConfirm();\n\n  const handleDeleteLlm = (name: string) => () => {\n    showDeleteConfirm({\n      onOk: async () => {\n        deleteLlm({ llm_factory: llmFactory, llm_name: name });\n      },\n    });\n  };\n\n  return { handleDeleteLlm };\n};\n\nexport const useHandleDeleteFactory = (llmFactory: string) => {\n  const { deleteFactory } = useDeleteFactory();\n  const showDeleteConfirm = useShowDeleteConfirm();\n\n  const handleDeleteFactory = () => {\n    showDeleteConfirm({\n      onOk: async () => {\n        deleteFactory({ llm_factory: llmFactory });\n      },\n    });\n  };\n\n  return { handleDeleteFactory };\n};\n","import { Button } from '@/components/ui/button';\nimport { Card, CardContent } from '@/components/ui/card';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport { SettingOutlined } from '@ant-design/icons';\nimport { Key, MoreVertical,TicketCheck, Plus, Trash2 } from 'lucide-react';\nimport { PropsWithChildren, useCallback, useMemo } from 'react';\nimport ApiKeyModal from '../mconfig-setting/setting-model/api-key-modal';\nimport { useSelectLlmList, useFetchConfiguredLlms } from '@/hooks/llm-hooks';\nimport { useSubmitApiKey, useSubmitAzure, useSubmitGoogle, useSubmitOllama, useSubmitSystemModelSetting } from '../mconfig-setting/setting-model/hooks';\nimport { useTranslate } from '@/hooks/common-hooks';\nimport { useTheme } from '@/components/theme-provider';\nimport { isLocalLlmFactory } from '../mconfig-setting/utils';\nimport AzureOpenAIModal from '../mconfig-setting/setting-model/azure-openai-modal';\nimport GoogleModal from '../mconfig-setting/setting-model/google-modal';\nimport OllamaModal from '../mconfig-setting/setting-model/ollama-modal';\nimport SystemModelSettingModal from '../mconfig-setting/setting-model/system-model-setting-modal';\nimport { Ticker } from 'rc-tween-one';\n\nconst settings = [\n  {\n    title: 'GPT Model',\n    description:\n      'The default chat LLM all the newly created knowledgebase will use.',\n    model: 'DeepseekChat',\n  },\n  {\n    title: 'Embedding Model',\n    description:\n      'The default embedding model all the newly created knowledgebase will use.',\n    model: 'DeepseekChat',\n  },\n  {\n    title: 'Image Model',\n    description:\n      'The default multi-capable model all the newly created knowledgebase will use. It can generate a picture or video.',\n    model: 'DeepseekChat',\n  },\n  {\n    title: 'Speech2TXT Model',\n    description:\n      'The default ASR model all the newly created knowledgebase will use. Use this model to translate voices to text something text.',\n    model: 'DeepseekChat',\n  },\n  {\n    title: 'TTS Model',\n    description:\n      'The default text to speech model all the newly created knowledgebase will use.',\n    model: 'DeepseekChat',\n  },\n];\n\n\n\nconst modelSettings = [\n  {\n    title: 'OpenAI',\n    description: '',\n    isNew: false,\n    model: 'OpenAI',\n  },\n  {\n    title: 'Gemini',\n    description: '',\n    isNew: false,\n    model: 'Gemini',\n  },\n  {\n    title: 'Ollama',\n    description: '',\n    isNew: true,\n    model: 'Ollama',\n  },\n  {\n    title: 'Azure-OpenAI',\n    description: '',\n    isNew: true,\n    model: 'Azure-OpenAI',\n  }\n];\n\nfunction Title({ children }: PropsWithChildren) {\n  return <span className=\"font-bold text-xl\">{children}</span>;\n}\n\nexport function SystemModelSetting() {\n  const { factoryList, myLlmList: llmList, loading } = useSelectLlmList();\n  //const { factoryList, configuredLlmList: configuredLlmList, loading1 } = useFetchConfiguredLlms();\n  const {data:configuredLlmList, loading:configuredLLMLoading} = useFetchConfiguredLlms();\n  \n  const { theme } = useTheme();\n  console.log(configuredLlmList);\n    //new \n    const {\n        saveApiKeyLoading,\n        initialApiKey,\n        llmFactory,\n        onApiKeySavingOk,\n        apiKeyVisible,\n        hideApiKeyModal,\n        showApiKeyModal,\n      } = useSubmitApiKey();\n      const {\n        saveSystemModelSettingLoading,\n        onSystemSettingSavingOk,\n        systemSettingVisible,\n        hideSystemSettingModal,\n        showSystemSettingModal,\n      } = useSubmitSystemModelSetting();\n      const {\n        llmAddingVisible,\n        hideLlmAddingModal,\n        showLlmAddingModal,\n        onLlmAddingOk,\n        llmAddingLoading,\n        selectedLlmFactory,\n      } = useSubmitOllama();\n    \n      const {\n        GoogleAddingVisible,\n        hideGoogleAddingModal,\n        showGoogleAddingModal,\n        onGoogleAddingOk,\n        GoogleAddingLoading,\n      } = useSubmitGoogle();\n    \n    \n      const {\n        AzureAddingVisible,\n        hideAzureAddingModal,\n        showAzureAddingModal,\n        onAzureAddingOk,\n        AzureAddingLoading,\n      } = useSubmitAzure();\n    \n      const ModalMap = useMemo(\n        () => ({\n          'Google Cloud': showGoogleAddingModal,\n          'Azure-OpenAI': showAzureAddingModal,\n        }),\n        [\n          showGoogleAddingModal,\n          showAzureAddingModal,\n        ],\n      );\n\n    //EOF new \n    //alert(JSON.stringify(llmFactory));\n      const handleAddModel = useCallback(\n        (llmFactory: string) => {\n        //  showApiKeyModal({ llm_factory: llmFactory });\n          if (isLocalLlmFactory(llmFactory)) {\n            showLlmAddingModal(llmFactory);\n          } else if (llmFactory in ModalMap) {\n            ModalMap[llmFactory as keyof typeof ModalMap]();\n          } else {\n            showApiKeyModal({ llm_factory: llmFactory });\n          }\n        },\n        [showApiKeyModal, showLlmAddingModal,ModalMap],\n      );\n  \n  const { t } = useTranslate('setting');\n\n  return (<>\n    {/*<Card>\n      <CardContent className=\"p-4 space-y-6\">\n        {settings.map((x, idx) => (\n          <div key={idx} className=\"flex items-center\">\n            <div className=\"flex-1 flex flex-col\">\n              <span className=\"font-semibold text-base\">{x.title}</span>\n              <span className=\"text-colors-text-neutral-standard\">\n                {x.description}\n              </span>\n            </div>\n            <div className=\"ml-2 flex-1\">\n              <Select defaultValue=\"english\">\n                <SelectTrigger>\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"english\">select</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n          </div>\n        ))}\n      </CardContent>\n    </Card>*/}\n   \n    <section className=\"mt-6\">\n      <h2 className=\"text-2xl font-semibold mb-3\">Added model</h2>\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-4 2xl:grid-cols-4 gap-4\">\n          {modelSettings.map((x, idx) => (\n            <Card className=\"pt-4\">\n            <CardContent className=\"space-y-4\">\n              <div className=\"flex justify-between space-y-4\">\n              </div>  \n              <Title>{x.title}</Title>\n              <p></p>\n              {/*<Card>\n                <CardContent className=\"p-3 flex gap-2\">\n                  <Button variant={'secondary'}>\n                    deepseek-chat <Trash2 />\n                  </Button>\n                  <Button variant={'secondary'}>\n                    deepseek-code <Trash2 />\n                  </Button>\n                </CardContent>\n              </Card>*/}\n              <div className=\"flex justify-end gap-2\">\n                {/*<Button variant=\"secondary\" size=\"icon\">\n                  <MoreVertical className=\"h-4 w-4\" />\n                </Button>*/}\n                {configuredLLMLoading?\"\":configuredLlmList[x.title][\"api_key\"]===\"Avaialble\"?\n               \n               <Button variant={'outline'} \n                  onClick={() => handleAddModel(x.model)}\n                 > \n                 \n                <SettingOutlined /> Update API\n                </Button>\n                :<Button variant={'tertiary'} \n                onClick={() => handleAddModel(x.model)}\n               > \n               \n              <SettingOutlined /> API\n              </Button>}\n                \n                \n              </div>\n            </CardContent>\n          </Card>\n          ))\n      }\n      </div>\n      <ApiKeyModal\n        visible={apiKeyVisible}\n        hideModal={hideApiKeyModal}\n        loading={saveApiKeyLoading}\n        initialValue={initialApiKey}\n        onOk={onApiKeySavingOk}\n        llmFactory={llmFactory}\n      ></ApiKeyModal>\n      {systemSettingVisible && (\n        <SystemModelSettingModal\n          visible={systemSettingVisible}\n          onOk={onSystemSettingSavingOk}\n          hideModal={hideSystemSettingModal}\n          loading={saveSystemModelSettingLoading}\n        ></SystemModelSettingModal>\n      )}\n      <OllamaModal\n        visible={llmAddingVisible}\n        hideModal={hideLlmAddingModal}\n        onOk={onLlmAddingOk}\n        loading={llmAddingLoading}\n        llmFactory={selectedLlmFactory}\n      ></OllamaModal>\n      <GoogleModal\n        visible={GoogleAddingVisible}\n        hideModal={hideGoogleAddingModal}\n        onOk={onGoogleAddingOk}\n        loading={GoogleAddingLoading}\n        llmFactory={'Google Cloud'}\n      ></GoogleModal>\n      <AzureOpenAIModal\n        visible={AzureAddingVisible}\n        hideModal={hideAzureAddingModal}\n        onOk={onAzureAddingOk}\n        loading={AzureAddingLoading}\n        llmFactory={'Azure-OpenAI'}\n      ></AzureOpenAIModal>\n    </section>\n  \n    </>\n  );\n}\n\nexport function ModelConfigCard(model: any) {\n  return (\n    <Card className=\"pt-4\">\n    <CardContent className=\"space-y-4\">\n      {JSON.stringify(model)}\n      <Title>{model.title}</Title>\n      <p>{model.model}</p>\n      <p>{model.description}</p>\n      <div className=\"flex justify-end gap-2\">\n        <Button variant=\"secondary\" size=\"icon\">\n          <MoreVertical className=\"h-4 w-4\" />\n        </Button>\n        <Button variant={'tertiary'}>\n          <Key /> API\n        </Button>\n      </div>\n    </CardContent>\n  </Card>\n  );\n}\nexport function ModelLibraryCard(){\n  return <></>\n}","import { LocalLlmFactories } from './constants';\n\nexport const isLocalLlmFactory = (llmFactory: string) =>\n  LocalLlmFactories.some((x) => x === llmFactory);\n","//import { useInfiniteFetchKnowledgeList } from '@/hooks/knowledge-hooks';\n//import { useFetchUserInfo } from '@/hooks/user-setting-hooks';\n//import { PlusOutlined, SearchOutlined } from '@ant-design/icons';\nimport {\n  /*Button,\n  Divider,\n  Empty,\n  Input,\n  Skeleton,\n  Space,*/\n  Flex,\n  Spin,\n} from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nimport { useMemo } from 'react';\nimport styles from './index.less';\n\n\nimport {\n  //AddModelCard,\n  ModelLibraryCard,\n  SystemModelSetting,\n} from './model/model-card';\n\nconst addedModelList = new Array(4).fill(1);\n\nconst modelLibraryList = new Array(4).fill(1);\n\n\nexport default function modelconfig() {\n  return  <Flex className={styles.knowledge} vertical flex={1} id=\"scrollableDiv\">\n  <Spin spinning={false}>\n  </Spin>\n  <section className=\"p-8 space-y-8 \">\n      \n     \n       {/* <SystemModelSetting></SystemModelSetting>\n        <section className=\"mt-6\">\n          <h2 className=\"text-2xl font-semibold mb-3\">Available models</h2>\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-4 2xl:grid-cols-4 gap-4\">\n            {addedModelList.map((x, idx) => (\n              <AddModelCard key={idx}></AddModelCard>\n            ))}\n          </div>\n        </section>*/} \n        <div className=\"flex justify-between items-center \">\n        <h1 className=\"text-4xl font-bold\"> Model Configuration</h1>\n       {/* <Button>Unfinished</Button>*/} \n      </div>\n        <section className=\"mt-2\">\n          <div className=\"flex justify-between items-center mb-3\">\n            <h2 className=\"text-2xl font-semibold \"></h2>\n          </div>\n          <div className=\" 2xl:grid-cols-8 gap-4\">\n            <div className=\"max-h-[84vh] overflow-auto\">\n              <SystemModelSetting/>\n            </div>\n          </div>\n          {/*<div className=\"grid grid-cols-2 lg:grid-cols-4 xl:grid-cols-6 2xl:grid-cols-8 gap-4\">\n            {modelLibraryList.map((x, idx) => (\n              <ModelLibraryCard key={idx}></ModelLibraryCard>\n            ))}\n          </div>*/}\n          \n        </section>\n     \n    </section>\n</Flex>\n}\n","import classNames from 'classnames';\nexport const flexWrapValues = ['wrap', 'nowrap', 'wrap-reverse'];\nexport const justifyContentValues = ['flex-start', 'flex-end', 'start', 'end', 'center', 'space-between', 'space-around', 'space-evenly', 'stretch', 'normal', 'left', 'right'];\nexport const alignItemsValues = ['center', 'start', 'end', 'flex-start', 'flex-end', 'self-start', 'self-end', 'baseline', 'normal', 'stretch'];\nconst genClsWrap = (prefixCls, props) => {\n  const wrapCls = {};\n  flexWrapValues.forEach(cssKey => {\n    wrapCls[`${prefixCls}-wrap-${cssKey}`] = props.wrap === cssKey;\n  });\n  return wrapCls;\n};\nconst genClsAlign = (prefixCls, props) => {\n  const alignCls = {};\n  alignItemsValues.forEach(cssKey => {\n    alignCls[`${prefixCls}-align-${cssKey}`] = props.align === cssKey;\n  });\n  alignCls[`${prefixCls}-align-stretch`] = !props.align && !!props.vertical;\n  return alignCls;\n};\nconst genClsJustify = (prefixCls, props) => {\n  const justifyCls = {};\n  justifyContentValues.forEach(cssKey => {\n    justifyCls[`${prefixCls}-justify-${cssKey}`] = props.justify === cssKey;\n  });\n  return justifyCls;\n};\nfunction createFlexClassNames(prefixCls, props) {\n  return classNames(Object.assign(Object.assign(Object.assign({}, genClsWrap(prefixCls, props)), genClsAlign(prefixCls, props)), genClsJustify(prefixCls, props)));\n}\nexport default createFlexClassNames;","import { genStyleHooks, mergeToken } from '../../theme/internal';\nimport { alignItemsValues, flexWrapValues, justifyContentValues } from '../utils';\nconst genFlexStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [componentCls]: {\n      display: 'flex',\n      '&-vertical': {\n        flexDirection: 'column'\n      },\n      '&-rtl': {\n        direction: 'rtl'\n      },\n      '&:empty': {\n        display: 'none'\n      }\n    }\n  };\n};\nconst genFlexGapStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [componentCls]: {\n      '&-gap-small': {\n        gap: token.flexGapSM\n      },\n      '&-gap-middle': {\n        gap: token.flexGap\n      },\n      '&-gap-large': {\n        gap: token.flexGapLG\n      }\n    }\n  };\n};\nconst genFlexWrapStyle = token => {\n  const {\n    componentCls\n  } = token;\n  const wrapStyle = {};\n  flexWrapValues.forEach(value => {\n    wrapStyle[`${componentCls}-wrap-${value}`] = {\n      flexWrap: value\n    };\n  });\n  return wrapStyle;\n};\nconst genAlignItemsStyle = token => {\n  const {\n    componentCls\n  } = token;\n  const alignStyle = {};\n  alignItemsValues.forEach(value => {\n    alignStyle[`${componentCls}-align-${value}`] = {\n      alignItems: value\n    };\n  });\n  return alignStyle;\n};\nconst genJustifyContentStyle = token => {\n  const {\n    componentCls\n  } = token;\n  const justifyStyle = {};\n  justifyContentValues.forEach(value => {\n    justifyStyle[`${componentCls}-justify-${value}`] = {\n      justifyContent: value\n    };\n  });\n  return justifyStyle;\n};\nexport const prepareComponentToken = () => ({});\nexport default genStyleHooks('Flex', token => {\n  const {\n    paddingXS,\n    padding,\n    paddingLG\n  } = token;\n  const flexToken = mergeToken(token, {\n    flexGapSM: paddingXS,\n    flexGap: padding,\n    flexGapLG: paddingLG\n  });\n  return [genFlexStyle(flexToken), genFlexGapStyle(flexToken), genFlexWrapStyle(flexToken), genAlignItemsStyle(flexToken), genJustifyContentStyle(flexToken)];\n}, prepareComponentToken, {\n  // Flex component don't apply extra font style\n  // https://github.com/ant-design/ant-design/issues/46403\n  resetStyle: false\n});","\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport React from 'react';\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport { isPresetSize } from '../_util/gapSize';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style';\nimport createFlexClassNames from './utils';\nconst Flex = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n      prefixCls: customizePrefixCls,\n      rootClassName,\n      className,\n      style,\n      flex,\n      gap,\n      children,\n      vertical = false,\n      component: Component = 'div'\n    } = props,\n    othersProps = __rest(props, [\"prefixCls\", \"rootClassName\", \"className\", \"style\", \"flex\", \"gap\", \"children\", \"vertical\", \"component\"]);\n  const {\n    flex: ctxFlex,\n    direction: ctxDirection,\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('flex', customizePrefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\n  const mergedVertical = vertical !== null && vertical !== void 0 ? vertical : ctxFlex === null || ctxFlex === void 0 ? void 0 : ctxFlex.vertical;\n  const mergedCls = classNames(className, rootClassName, ctxFlex === null || ctxFlex === void 0 ? void 0 : ctxFlex.className, prefixCls, hashId, cssVarCls, createFlexClassNames(prefixCls, props), {\n    [`${prefixCls}-rtl`]: ctxDirection === 'rtl',\n    [`${prefixCls}-gap-${gap}`]: isPresetSize(gap),\n    [`${prefixCls}-vertical`]: mergedVertical\n  });\n  const mergedStyle = Object.assign(Object.assign({}, ctxFlex === null || ctxFlex === void 0 ? void 0 : ctxFlex.style), style);\n  if (flex) {\n    mergedStyle.flex = flex;\n  }\n  if (gap && !isPresetSize(gap)) {\n    mergedStyle.gap = gap;\n  }\n  return wrapCSSVar( /*#__PURE__*/React.createElement(Component, Object.assign({\n    ref: ref,\n    className: mergedCls,\n    style: mergedStyle\n  }, omit(othersProps, ['justify', 'wrap', 'align'])), children));\n});\nif (process.env.NODE_ENV !== 'production') {\n  Flex.displayName = 'Flex';\n}\nexport default Flex;","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import { clsx } from \"clsx\";\nconst falsyToString = (value)=>typeof value === \"boolean\" ? \"\".concat(value) : value === 0 ? \"0\" : value;\nexport const cx = clsx;\nexport const cva = (base, config)=>{\n    return (props)=>{\n        var ref;\n        if ((config === null || config === void 0 ? void 0 : config.variants) == null) return cx(base, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\n        const { variants , defaultVariants  } = config;\n        const getVariantClassNames = Object.keys(variants).map((variant)=>{\n            const variantProp = props === null || props === void 0 ? void 0 : props[variant];\n            const defaultVariantProp = defaultVariants === null || defaultVariants === void 0 ? void 0 : defaultVariants[variant];\n            if (variantProp === null) return null;\n            const variantKey = falsyToString(variantProp) || falsyToString(defaultVariantProp);\n            return variants[variant][variantKey];\n        });\n        const propsWithoutUndefined = props && Object.entries(props).reduce((acc, param)=>{\n            let [key, value] = param;\n            if (value === undefined) {\n                return acc;\n            }\n            acc[key] = value;\n            return acc;\n        }, {});\n        const getCompoundVariantClassNames = config === null || config === void 0 ? void 0 : (ref = config.compoundVariants) === null || ref === void 0 ? void 0 : ref.reduce((acc, param1)=>{\n            let { class: cvClass , className: cvClassName , ...compoundVariantOptions } = param1;\n            return Object.entries(compoundVariantOptions).every((param)=>{\n                let [key, value] = param;\n                return Array.isArray(value) ? value.includes({\n                    ...defaultVariants,\n                    ...propsWithoutUndefined\n                }[key]) : ({\n                    ...defaultVariants,\n                    ...propsWithoutUndefined\n                })[key] === value;\n            }) ? [\n                ...acc,\n                cvClass,\n                cvClassName\n            ] : acc;\n        }, []);\n        return cx(base, getVariantClassNames, getCompoundVariantClassNames, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\n    };\n};\n\n\n//# sourceMappingURL=index.mjs.map"],"names":["_excluded","Icon","props","ref","className","Component","component","viewBox","spin","rotate","tabIndex","onClick","children","restProps","iconRef","mergedRef","Boolean","_React$useContext","_React$useContext$pre","prefixCls","rootClassName","classString","svgClassString","concat","svgStyle","msTransform","transform","undefined","innerSvgProps","style","iconTabIndex","role","count","only","type","displayName","AntdIcon","icon","buttonVariants","cva","variants","variant","default","destructive","outline","secondary","ghost","link","tertiary","size","sm","lg","auto","defaultVariants","Button","React","_ref","_ref$asChild","asChild","_objectWithoutProperties","Comp","Slot","_jsx","_objectSpread","cn","Card","CardHeader","_ref2","_excluded2","CardTitle","_ref3","_excluded3","_ref4","_excluded4","CardContent","_ref5","_excluded5","_ref6","_excluded6","KnowledgeRouteKey","RunningStatus","ModelVariableType","settledModelVariableMap","_defineProperty","Improvise","temperature","top_p","frequency_penalty","presence_penalty","max_tokens","Precise","Balance","LlmModelType","KnowledgeSearchParams","DocumentType","useFetchLlmList","modelType","_queryFn","_useQuery","useQuery","queryKey","initialData","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_data$data","_yield$userService$ll","data","wrap","_context","prev","next","userService","llm_list","model_type","sent","abrupt","stop","apply","arguments","useSelectLlmOptionsByModelType","llmInfo","groupOptionsByModelType","Object","entries","filter","value","_slicedToArray","some","x","includes","map","label","options","available","_jsxs","Flex","align","gap","LlmIcon","name","fid","llm_name","_llm_name$split$at","split","at","width","height","disabled","length","Chat","Embedding","Image2text","Speech2text","Rerank","TTS","useComposeLlmOptionsByModelTypes","modelTypes","allOptions","reduce","pre","cur","forEach","_item$options","item","find","y","push","_toConsumableArray","useFetchConfiguredLlms","_queryFn4","_useQuery4","gcTime","_callee4","_data$data4","_yield$userService$co","_context4","configured_llm_list","loading","isFetching","useSelectLlmList","_queryFn3","_useQuery3","_queryFn2","_useQuery2","_useFetchMyLlmList","_callee3","_data$data3","_yield$userService$my","_context3","my_llm","myLlmList","myLlmListLoading","_useFetchLlmFactoryLi","_callee2","_data$data2","_yield$userService$fa","_context2","factories_list","factoryList","factoryListLoading","useMemo","_ref8","_factoryList$find$log","_factoryList$find","_ref9","key","logo","currentList","keys","every","sortLLmFactoryListBySpecifiedOrder","useSaveApiKey","_mutationFn","queryClient","useQueryClient","t","useTranslation","_useMutation","useMutation","mutationKey","mutationFn","_callee5","params","_yield$userService$se","_context5","set_api_key","code","message","success","invalidateQueries","_x","isPending","saveApiKey","mutateAsync","useSaveTenantInfo","_mutationFn2","_useMutation2","_callee6","_yield$userService$se2","_context6","set_tenant_info","_x2","saveTenantInfo","useAddLlm","_mutationFn3","_useMutation3","_callee7","_yield$userService$ad","_context7","add_llm","_x3","addLlm","useDeleteLlm","_mutationFn4","_useMutation4","_callee8","_yield$userService$de","_context8","delete_llm","_x4","deleteLlm","useDeleteFactory","_mutationFn5","_useMutation5","_callee9","_yield$userService$de2","_context9","deleteFactory","_x5","modelsWithBaseUrl","visible","hideModal","llmFactory","initialValue","onOk","_Form$useForm","Form","useForm","form","useTranslate","handleOk","ret","validateFields","useEffect","setFieldValue","Modal","title","open","onCancel","okButtonProps","confirmLoading","labelCol","span","wrapperCol","maxWidth","autoComplete","Item","tooltip","rules","required","Input","placeholder","toLowerCase","LocalLlmFactories","UserSettingRouteKey","Profile","ProfileIcon","Password","PasswordIcon","Model","ModelProviderIcon","System","MonitorOutlined","fontSize","Team","TeamIcon","Logout","LogOutIcon","Api","ApiIcon","Option","Select","values","vision","omit","llm_factory","console","info","optionsMap","layout","option","getFieldValue","validator","_","Promise","reject","Error","resolve","InputNumber","noStyle","dependencies","valuePropName","Switch","llmFactoryToUrlMap","Ollama","Xinference","LocalAI","TogetherAI","Replicate","OpenRouter","HuggingFace","GPUStack","factory","url","Default","footer","originNode","justify","href","target","rel","Space","_useFetchSystemModelS","systemSetting","useFetchTenantInfo","initialValues","_values$asr_id","_values$embd_id","_values$img2txt_id","_values$llm_id","asr_id","embd_id","img2txt_id","llm_id","setFieldsValue","onValuesChange","allowClear","modelSettings","description","isNew","model","Title","SystemModelSetting","_useSelectLlmList","_useFetchConfiguredLl","configuredLlmList","configuredLLMLoading","useTheme","theme","log","_useSubmitApiKey","_useState","useState","_useState2","savingParams","setSavingParams","_useSaveApiKey","_useSetModalState","useSetModalState","apiKeyVisible","hideApiKeyModal","showApiKeyModal","showModal","onApiKeySavingOk","useCallback","postBody","onShowApiKeyModal","saveApiKeyLoading","initialApiKey","useSubmitApiKey","_useSubmitSystemModel","_useSaveTenantInfo","saveSystemModelSetting","_useSetModalState2","systemSettingVisible","hideSystemSettingModal","showSystemSettingModal","onSystemSettingSavingOk","payload","tenant_id","saveSystemModelSettingLoading","useSubmitSystemModelSetting","_useSubmitOllama","_useState3","_useState4","selectedLlmFactory","setSelectedLlmFactory","_useAddLlm","_useSetModalState3","llmAddingVisible","hideLlmAddingModal","showLlmAddingModal","onLlmAddingOk","llmAddingLoading","useSubmitOllama","_useSubmitGoogle","_useAddLlm8","_useSetModalState10","GoogleAddingVisible","hideGoogleAddingModal","showGoogleAddingModal","onGoogleAddingOk","_ref10","_callee10","_context10","_x10","GoogleAddingLoading","useSubmitGoogle","_useSubmitAzure","_useAddLlm10","_useSetModalState12","AzureAddingVisible","hideAzureAddingModal","showAzureAddingModal","onAzureAddingOk","_ref12","_callee12","_context12","_x12","AzureAddingLoading","useSubmitAzure","ModalMap","handleAddModel","isLocalLlmFactory","_Fragment","idx","SettingOutlined","ApiKeyModal","SystemModelSettingModal","OllamaModal","GoogleModal","AzureOpenAIModal","Array","fill","modelconfig","styles","vertical","flex","id","Spin","spinning","flexWrapValues","justifyContentValues","alignItemsValues","assign","wrapCls","cssKey","genClsWrap","alignCls","genClsAlign","justifyCls","genClsJustify","genFlexStyle","token","componentCls","display","flexDirection","direction","genFlexGapStyle","flexGapSM","flexGap","flexGapLG","genFlexWrapStyle","wrapStyle","flexWrap","genAlignItemsStyle","alignStyle","alignItems","genJustifyContentStyle","justifyStyle","justifyContent","paddingXS","padding","paddingLG","flexToken","resetStyle","__rest","s","e","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","propertyIsEnumerable","customizePrefixCls","othersProps","ctxFlex","ctxDirection","getPrefixCls","wrapCSSVar","hashId","cssVarCls","mergedVertical","mergedCls","mergedStyle","r","f","n","isArray","clsx","falsyToString","cx","base","config","class","getVariantClassNames","variantProp","defaultVariantProp","variantKey","propsWithoutUndefined","acc","param","getCompoundVariantClassNames","compoundVariants","param1","cvClass","cvClassName","compoundVariantOptions"],"sourceRoot":""}