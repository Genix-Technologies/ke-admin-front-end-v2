{"version":3,"file":"4971.60661cd4.async.js","mappings":"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","sources":["webpack:///./src/components/api-service/embed-modal/index.less?e4ca","webpack:///./src/components/api-service/embed-modal/index.tsx","webpack:///./src/components/api-service/hooks.ts","webpack:///./src/components/knowledge-base-item.tsx","webpack:///./src/components/llm-setting-items/index.less?f964","webpack:///./src/components/llm-setting-items/index.tsx","webpack:///./src/components/similarity-slider/index.tsx","webpack:///./src/components/top-n-item.tsx","webpack:///./src/constants/common.ts","webpack:///./src/hooks/llm-hooks.tsx","webpack:///./src/hooks/user-setting-hooks.tsx","webpack:///./src/services/user-service.ts","webpack:///./src/utils/api.ts","webpack:///./src/utils/form.ts","webpack:///./src/utils/register-server.ts","webpack:///./src/utils/request.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"codeCard\":\"codeCard___TMIpT\",\"codeText\":\"codeText___pRkMI\",\"id\":\"id___EtPCm\",\"darkBg\":\"darkBg___aK5gz\",\"darkId\":\"darkId___ASEvo\"};","import CopyToClipboard from '@/components/copy-to-clipboard';\nimport HightLightMarkdown from '@/components/highlight-markdown';\nimport { SharedFrom } from '@/constants/chat';\nimport { useTranslate } from '@/hooks/common-hooks';\nimport { IModalProps } from '@/interfaces/common';\nimport { Card, Modal, Tabs, TabsProps, Typography } from 'antd';\n\nimport { useIsDarkTheme } from '@/components/theme-provider';\nimport { cn } from '@/lib/utils';\nimport styles from './index.less';\n\nconst { Paragraph, Link } = Typography;\n\nconst EmbedModal = ({\n  visible,\n  hideModal,\n  token = '',\n  form,\n  beta = '',\n  isAgent,\n}: IModalProps<any> & {\n  token: string;\n  form: SharedFrom;\n  beta: string;\n  isAgent: boolean;\n}) => {\n  const { t } = useTranslate('chat');\n  const isDarkTheme = useIsDarkTheme();\n\n  const text = `\n  ~~~ html\n  <iframe\n  src=\"${location.origin}/chat/share?shared_id=${token}&from=${form}&auth=${beta}\"\n  style=\"width: 100%; height: 100%; min-height: 600px\"\n  frameborder=\"0\"\n>\n</iframe>\n~~~\n  `;\n\n  const items: TabsProps['items'] = [\n    {\n      key: '1',\n      label: t('fullScreenTitle'),\n      children: (\n        <Card\n          title={t('fullScreenDescription')}\n          extra={<CopyToClipboard text={text}></CopyToClipboard>}\n          className={styles.codeCard}\n        >\n          <HightLightMarkdown>{text}</HightLightMarkdown>\n        </Card>\n      ),\n    },\n    {\n      key: '2',\n      label: t('partialTitle'),\n      children: t('comingSoon'),\n    },\n    {\n      key: '3',\n      label: t('extensionTitle'),\n      children: t('comingSoon'),\n    },\n  ];\n\n  const onChange = (key: string) => {\n    console.log(key);\n  };\n\n  return (\n    <Modal\n      title={t('embedIntoSite', { keyPrefix: 'common' })}\n      open={visible}\n      style={{ top: 300 }}\n      width={'50vw'}\n      onOk={hideModal}\n      onCancel={hideModal}\n    >\n      <Tabs defaultActiveKey=\"1\" items={items} onChange={onChange} />\n      <div className=\"text-base font-medium mt-4 mb-1\">\n        {t(isAgent ? 'flow' : 'chat', { keyPrefix: 'header' })}\n        <span className=\"ml-1 inline-block\">ID</span>\n      </div>\n      <Paragraph\n        copyable={{ text: token }}\n        className={cn(styles.id, {\n          [styles.darkId]: isDarkTheme,\n        })}\n      >\n        {token}\n      </Paragraph>\n      <Link\n        href={\n          isAgent\n            ? 'https://ragflow.io/docs/dev/http_api_reference#create-session-with-agent'\n            : 'https://ragflow.io/docs/dev/http_api_reference#create-session-with-chat-assistant'\n        }\n        target=\"_blank\"\n      >\n        {t('howUseId', { keyPrefix: isAgent ? 'flow' : 'chat' })}\n      </Link>\n    </Modal>\n  );\n};\n\nexport default EmbedModal;\n","import { SharedFrom } from '@/constants/chat';\nimport {\n  useSetModalState,\n  useShowDeleteConfirm,\n  useTranslate,\n} from '@/hooks/common-hooks';\nimport {\n  useCreateSystemToken,\n  useFetchManualSystemTokenList,\n  useFetchSystemTokenList,\n  useRemoveSystemToken,\n} from '@/hooks/user-setting-hooks';\nimport { IStats } from '@/interfaces/database/chat';\nimport { useQueryClient } from '@tanstack/react-query';\nimport { message } from 'antd';\nimport { useCallback } from 'react';\n\nexport const useOperateApiKey = (idKey: string, dialogId?: string) => {\n  const { removeToken } = useRemoveSystemToken();\n  const { createToken, loading: creatingLoading } = useCreateSystemToken();\n  const { data: tokenList, loading: listLoading } = useFetchSystemTokenList();\n\n  const showDeleteConfirm = useShowDeleteConfirm();\n\n  const onRemoveToken = (token: string) => {\n    showDeleteConfirm({\n      onOk: () => removeToken(token),\n    });\n  };\n\n  const onCreateToken = useCallback(() => {\n    createToken({ [idKey]: dialogId });\n  }, [createToken, idKey, dialogId]);\n\n  return {\n    removeToken: onRemoveToken,\n    createToken: onCreateToken,\n    tokenList,\n    creatingLoading,\n    listLoading,\n  };\n};\n\ntype ChartStatsType = {\n  [k in keyof IStats]: Array<{ xAxis: string; yAxis: number }>;\n};\n\nexport const useSelectChartStatsList = (): ChartStatsType => {\n  const queryClient = useQueryClient();\n  const data = queryClient.getQueriesData({ queryKey: ['fetchStats'] });\n  const stats: IStats = (data.length > 0 ? data[0][1] : {}) as IStats;\n\n  return Object.keys(stats).reduce((pre, cur) => {\n    const item = stats[cur as keyof IStats];\n    if (item.length > 0) {\n      pre[cur as keyof IStats] = item.map((x) => ({\n        xAxis: x[0] as string,\n        yAxis: x[1] as number,\n      }));\n    }\n    return pre;\n  }, {} as ChartStatsType);\n};\n\nexport const useShowTokenEmptyError = () => {\n  const { t } = useTranslate('chat');\n\n  const showTokenEmptyError = useCallback(() => {\n    message.error(t('tokenError'));\n  }, [t]);\n  return { showTokenEmptyError };\n};\n\nexport const useShowBetaEmptyError = () => {\n  const { t } = useTranslate('chat');\n\n  const showBetaEmptyError = useCallback(() => {\n    message.error(t('betaError'));\n  }, [t]);\n  return { showBetaEmptyError };\n};\n\nconst getUrlWithToken = (token: string, from: string = 'chat') => {\n  const { protocol, host } = window.location;\n  return `${protocol}//${host}/chat/share?shared_id=${token}&from=${from}`;\n};\n\nconst useFetchTokenListBeforeOtherStep = () => {\n  const { showTokenEmptyError } = useShowTokenEmptyError();\n  const { showBetaEmptyError } = useShowBetaEmptyError();\n\n  const { data: tokenList, fetchSystemTokenList } =\n    useFetchManualSystemTokenList();\n\n  let token = '',\n    beta = '';\n\n  if (Array.isArray(tokenList) && tokenList.length > 0) {\n    token = tokenList[0].token;\n    beta = tokenList[0].beta;\n  }\n\n  token =\n    Array.isArray(tokenList) && tokenList.length > 0 ? tokenList[0].token : '';\n\n  const handleOperate = useCallback(async () => {\n    const ret = await fetchSystemTokenList();\n    const list = ret;\n    if (Array.isArray(list) && list.length > 0) {\n      if (!list[0].beta) {\n        showBetaEmptyError();\n        return false;\n      }\n      return list[0]?.token;\n    } else {\n      showTokenEmptyError();\n      return false;\n    }\n  }, [fetchSystemTokenList, showBetaEmptyError, showTokenEmptyError]);\n\n  return {\n    token,\n    beta,\n    handleOperate,\n  };\n};\n\nexport const useShowEmbedModal = () => {\n  const {\n    visible: embedVisible,\n    hideModal: hideEmbedModal,\n    showModal: showEmbedModal,\n  } = useSetModalState();\n\n  const { handleOperate, token, beta } = useFetchTokenListBeforeOtherStep();\n\n  const handleShowEmbedModal = useCallback(async () => {\n    const succeed = await handleOperate();\n    if (succeed) {\n      showEmbedModal();\n    }\n  }, [handleOperate, showEmbedModal]);\n\n  return {\n    showEmbedModal: handleShowEmbedModal,\n    hideEmbedModal,\n    embedVisible,\n    embedToken: token,\n    beta,\n  };\n};\n\nexport const usePreviewChat = (idKey: string) => {\n  const { handleOperate } = useFetchTokenListBeforeOtherStep();\n\n  const open = useCallback(\n    (t: string) => {\n      window.open(\n        getUrlWithToken(\n          t,\n          idKey === 'canvasId' ? SharedFrom.Agent : SharedFrom.Chat,\n        ),\n        '_blank',\n      );\n    },\n    [idKey],\n  );\n\n  const handlePreview = useCallback(async () => {\n    const token = await handleOperate();\n    if (token) {\n      open(token);\n    }\n  }, [handleOperate, open]);\n\n  return {\n    handlePreview,\n  };\n};\n","import { DocumentParserType } from '@/constants/knowledge';\nimport { useTranslate } from '@/hooks/common-hooks';\nimport { useFetchKnowledgeList } from '@/hooks/knowledge-hooks';\nimport { UserOutlined } from '@ant-design/icons';\nimport { Avatar, Form, Select, Space } from 'antd';\n\nconst KnowledgeBaseItem = () => {\n  const { t } = useTranslate('chat');\n\n  const { list: knowledgeList } = useFetchKnowledgeList(false);\n //const { list: knowledgeList } = useFetchKnowledgeList(true);\n  const filteredKnowledgeList = knowledgeList;//.filter(\n   // (x) => x.parser_id !== DocumentParserType.Tag,\n // );\n\n  const knowledgeOptions = filteredKnowledgeList.map((x) => ({\n    label: (\n      <Space>\n        {/*<Avatar size={20} icon={<UserOutlined />} src={x.avatar} />*/}\n        {x.name}\n      </Space>\n    ),\n    value: x.id,\n  }));\n\n  return (\n    <Form.Item\n      label={t('knowledgeBases')}\n      name=\"kb_ids\"\n      tooltip={t('knowledgeBasesTip')}\n      rules={[\n        {\n          required: true,\n          message: t('knowledgeBasesMessage'),\n          type: 'array',\n        },\n      ]}\n    >\n      <Select\n        mode=\"multiple\"\n        options={knowledgeOptions}\n        placeholder={t('knowledgeBasesMessage')}\n      ></Select>\n    </Form.Item>\n  );\n};\n\nexport default KnowledgeBaseItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"sliderInputNumber\":\"sliderInputNumber___ZMqQO\",\"variableSlider\":\"variableSlider___MglII\"};","import {\n  LlmModelType,\n  ModelVariableType,\n  settledModelVariableMap,\n} from '@/constants/knowledge';\nimport { Divider, Flex, Form, InputNumber, Select, Slider, Switch } from 'antd';\nimport camelCase from 'lodash/camelCase';\n\nimport { useTranslate } from '@/hooks/common-hooks';\nimport { useComposeLlmOptionsByModelTypes } from '@/hooks/llm-hooks';\nimport { useCallback, useMemo } from 'react';\nimport styles from './index.less';\n\ninterface IProps {\n  prefix?: string;\n  formItemLayout?: any;\n  handleParametersChange?(value: ModelVariableType): void;\n}\n\nconst LlmSettingItems = ({ prefix, formItemLayout = {} }: IProps) => {\n  const form = Form.useFormInstance();\n  const { t } = useTranslate('chat');\n  const parameterOptions = Object.values(ModelVariableType).map((x) => ({\n    label: t(camelCase(x)),\n    value: x,\n  }));\n\n  const handleParametersChange = useCallback(\n    (value: ModelVariableType) => {\n      const variable = settledModelVariableMap[value];\n      let nextVariable: Record<string, any> = variable;\n      if (prefix) {\n        nextVariable = { [prefix]: variable };\n      }\n      form.setFieldsValue(nextVariable);\n    },\n    [form, prefix],\n  );\n\n  const memorizedPrefix = useMemo(() => (prefix ? [prefix] : []), [prefix]);\n\n  const modelOptions = useComposeLlmOptionsByModelTypes([\n    LlmModelType.Chat,\n    LlmModelType.Image2text,\n  ]);\n\n  return (\n    <>\n      <Form.Item\n        label={t('model')}\n        name=\"llm_id\"\n        tooltip={t('modelTip')}\n        {...formItemLayout}\n        rules={[{ required: true, message: t('modelMessage') }]}\n      >\n        <Select options={modelOptions} showSearch />\n      </Form.Item>\n      <Divider></Divider>\n      <Form.Item\n        label={t('freedom')}\n        name=\"parameter\"\n        tooltip={t('freedomTip')}\n        {...formItemLayout}\n        initialValue={ModelVariableType.Precise}\n      >\n        <Select<ModelVariableType>\n          options={parameterOptions}\n          onChange={handleParametersChange}\n        />\n      </Form.Item>\n      <Form.Item\n        label={t('temperature')}\n        tooltip={t('temperatureTip')}\n        {...formItemLayout}\n      >\n        <Flex gap={20} align=\"center\">\n          <Form.Item\n            name={'temperatureEnabled'}\n            valuePropName=\"checked\"\n            noStyle\n          >\n            <Switch size=\"small\" />\n          </Form.Item>\n          <Form.Item noStyle dependencies={['temperatureEnabled']}>\n            {({ getFieldValue }) => {\n              const disabled = !getFieldValue('temperatureEnabled');\n              return (\n                <>\n                  <Flex flex={1}>\n                    <Form.Item\n                      name={[...memorizedPrefix, 'temperature']}\n                      noStyle\n                    >\n                      <Slider\n                        className={styles.variableSlider}\n                        max={1}\n                        step={0.01}\n                        disabled={disabled}\n                      />\n                    </Form.Item>\n                  </Flex>\n                  <Form.Item name={[...memorizedPrefix, 'temperature']} noStyle>\n                    <InputNumber\n                      className={styles.sliderInputNumber}\n                      max={1}\n                      min={0}\n                      step={0.01}\n                      disabled={disabled}\n                    />\n                  </Form.Item>\n                </>\n              );\n            }}\n          </Form.Item>\n        </Flex>\n      </Form.Item>\n      <Form.Item label={t('topP')} tooltip={t('topPTip')} {...formItemLayout}>\n        <Flex gap={20} align=\"center\">\n          <Form.Item name={'topPEnabled'} valuePropName=\"checked\" noStyle>\n            <Switch size=\"small\" />\n          </Form.Item>\n          <Form.Item noStyle dependencies={['topPEnabled']}>\n            {({ getFieldValue }) => {\n              const disabled = !getFieldValue('topPEnabled');\n              return (\n                <>\n                  <Flex flex={1}>\n                    <Form.Item name={[...memorizedPrefix, 'top_p']} noStyle>\n                      <Slider\n                        className={styles.variableSlider}\n                        max={1}\n                        step={0.01}\n                        disabled={disabled}\n                      />\n                    </Form.Item>\n                  </Flex>\n                  <Form.Item name={[...memorizedPrefix, 'top_p']} noStyle>\n                    <InputNumber\n                      className={styles.sliderInputNumber}\n                      max={1}\n                      min={0}\n                      step={0.01}\n                      disabled={disabled}\n                    />\n                  </Form.Item>\n                </>\n              );\n            }}\n          </Form.Item>\n        </Flex>\n      </Form.Item>\n      <Form.Item\n        label={t('presencePenalty')}\n        tooltip={t('presencePenaltyTip')}\n        {...formItemLayout}\n      >\n        <Flex gap={20} align=\"center\">\n          <Form.Item\n            name={'presencePenaltyEnabled'}\n            valuePropName=\"checked\"\n            noStyle\n          >\n            <Switch size=\"small\" />\n          </Form.Item>\n          <Form.Item noStyle dependencies={['presencePenaltyEnabled']}>\n            {({ getFieldValue }) => {\n              const disabled = !getFieldValue('presencePenaltyEnabled');\n              return (\n                <>\n                  <Flex flex={1}>\n                    <Form.Item\n                      name={[...memorizedPrefix, 'presence_penalty']}\n                      noStyle\n                    >\n                      <Slider\n                        className={styles.variableSlider}\n                        max={1}\n                        step={0.01}\n                        disabled={disabled}\n                      />\n                    </Form.Item>\n                  </Flex>\n                  <Form.Item\n                    name={[...memorizedPrefix, 'presence_penalty']}\n                    noStyle\n                  >\n                    <InputNumber\n                      className={styles.sliderInputNumber}\n                      max={1}\n                      min={0}\n                      step={0.01}\n                      disabled={disabled}\n                    />\n                  </Form.Item>\n                </>\n              );\n            }}\n          </Form.Item>\n        </Flex>\n      </Form.Item>\n      <Form.Item\n        label={t('frequencyPenalty')}\n        tooltip={t('frequencyPenaltyTip')}\n        {...formItemLayout}\n      >\n        <Flex gap={20} align=\"center\">\n          <Form.Item\n            name={'frequencyPenaltyEnabled'}\n            valuePropName=\"checked\"\n            noStyle\n          >\n            <Switch size=\"small\" />\n          </Form.Item>\n          <Form.Item noStyle dependencies={['frequencyPenaltyEnabled']}>\n            {({ getFieldValue }) => {\n              const disabled = !getFieldValue('frequencyPenaltyEnabled');\n              return (\n                <>\n                  <Flex flex={1}>\n                    <Form.Item\n                      name={[...memorizedPrefix, 'frequency_penalty']}\n                      noStyle\n                    >\n                      <Slider\n                        className={styles.variableSlider}\n                        max={1}\n                        step={0.01}\n                        disabled={disabled}\n                      />\n                    </Form.Item>\n                  </Flex>\n                  <Form.Item\n                    name={[...memorizedPrefix, 'frequency_penalty']}\n                    noStyle\n                  >\n                    <InputNumber\n                      className={styles.sliderInputNumber}\n                      max={1}\n                      min={0}\n                      step={0.01}\n                      disabled={disabled}\n                    />\n                  </Form.Item>\n                </>\n              );\n            }}\n          </Form.Item>\n        </Flex>\n      </Form.Item>\n      <Form.Item\n        label={t('maxTokens')}\n        tooltip={t('maxTokensTip')}\n        {...formItemLayout}\n      >\n        <Flex gap={20} align=\"center\">\n          <Form.Item name={'maxTokensEnabled'} valuePropName=\"checked\" noStyle>\n            <Switch size=\"small\" />\n          </Form.Item>\n          <Form.Item noStyle dependencies={['maxTokensEnabled']}>\n            {({ getFieldValue }) => {\n              const disabled = !getFieldValue('maxTokensEnabled');\n\n              return (\n                <>\n                  <Flex flex={1}>\n                    <Form.Item\n                      name={[...memorizedPrefix, 'max_tokens']}\n                      noStyle\n                    >\n                      <Slider\n                        className={styles.variableSlider}\n                        max={128000}\n                        disabled={disabled}\n                      />\n                    </Form.Item>\n                  </Flex>\n                  <Form.Item name={[...memorizedPrefix, 'max_tokens']} noStyle>\n                    <InputNumber\n                      disabled={disabled}\n                      className={styles.sliderInputNumber}\n                      max={128000}\n                      min={0}\n                    />\n                  </Form.Item>\n                </>\n              );\n            }}\n          </Form.Item>\n        </Flex>\n      </Form.Item>\n    </>\n  );\n};\n\nexport default LlmSettingItems;\n","import { useTranslate } from '@/hooks/common-hooks';\nimport { Form, Slider } from 'antd';\n\ntype FieldType = {\n  similarity_threshold?: number;\n  // vector_similarity_weight?: number;\n};\n\ninterface IProps {\n  isTooltipShown?: boolean;\n  vectorSimilarityWeightName?: string;\n}\n\nconst SimilaritySlider = ({\n  isTooltipShown = false,\n  vectorSimilarityWeightName = 'vector_similarity_weight',\n}: IProps) => {\n  const { t } = useTranslate('knowledgeDetails');\n\n  return (\n    <>\n      <Form.Item<FieldType>\n        label={t('similarityThreshold')}\n        name={'similarity_threshold'}\n        tooltip={isTooltipShown && t('similarityThresholdTip')}\n        initialValue={0.2}\n      >\n        <Slider max={1} step={0.01} />\n      </Form.Item>\n      <Form.Item\n        label={t('vectorSimilarityWeight')}\n        name={vectorSimilarityWeightName}\n        initialValue={1 - 0.3}\n        tooltip={isTooltipShown && t('vectorSimilarityWeightTip')}\n      >\n        <Slider max={1} step={0.01} />\n      </Form.Item>\n    </>\n  );\n};\n\nexport default SimilaritySlider;\n","import { useTranslate } from '@/hooks/common-hooks';\nimport { Form, Slider } from 'antd';\n\ntype FieldType = {\n  top_n?: number;\n};\n\ninterface IProps {\n  initialValue?: number;\n  max?: number;\n}\n\nconst TopNItem = ({ initialValue = 8, max = 30 }: IProps) => {\n  const { t } = useTranslate('chat');\n\n  return (\n    <Form.Item<FieldType>\n      label={t('topN')}\n      name={'top_n'}\n      initialValue={initialValue}\n      tooltip={t('topNTip')}\n    >\n      <Slider max={max} />\n    </Form.Item>\n  );\n};\n\nexport default TopNItem;\n","export const fileIconMap = {\n  aep: 'aep.svg',\n  ai: 'ai.svg',\n  avi: 'avi.svg',\n  css: 'css.svg',\n  csv: 'csv.svg',\n  dmg: 'dmg.svg',\n  doc: 'doc.svg',\n  docx: 'docx.svg',\n  eps: 'eps.svg',\n  exe: 'exe.svg',\n  fig: 'fig.svg',\n  gif: 'gif.svg',\n  html: 'html.svg',\n  indd: 'indd.svg',\n  java: 'java.svg',\n  jpeg: 'jpeg.svg',\n  jpg: 'jpg.svg',\n  js: 'js.svg',\n  json: 'json.svg',\n  mkv: 'mkv.svg',\n  mp3: 'mp3.svg',\n  mp4: 'mp4.svg',\n  mpeg: 'mpeg.svg',\n  pdf: 'pdf.svg',\n  png: 'png.svg',\n  ppt: 'ppt.svg',\n  pptx: 'pptx.svg',\n  psd: 'psd.svg',\n  rss: 'rss.svg',\n  sql: 'sql.svg',\n  svg: 'svg.svg',\n  tiff: 'tiff.svg',\n  txt: 'txt.svg',\n  wav: 'wav.svg',\n  webp: 'webp.svg',\n  xls: 'xls.svg',\n  xlsx: 'xlsx.svg',\n  xml: 'xml.svg',\n};\n\nexport const LanguageList = [\n  'English',\n  'Other_language',\n  /*'Chinese',\n  'Traditional Chinese',\n  'Indonesia',\n  'Spanish',\n  'Vietnamese',\n  'Japanese',\n  'Portuguese BR',*/\n];\n\nexport const LanguageMap = {\n  English: 'English',\n  Other_language: 'Lang 2'\n /*  'Traditional Chinese': '繁體中文',\n  Indonesia: 'Indonesia',\n  Spanish: 'Español',\n  Vietnamese: 'Tiếng việt',\n  Japanese: '日本語',\n  'Portuguese BR': 'Português BR',*/\n};\n\nexport const LanguageTranslationMap = {\n  English: 'en',\n  Chinese: 'zh',\n  'Traditional Chinese': 'zh-TRADITIONAL',\n  Indonesia: 'id',\n  Spanish: 'es',\n  Vietnamese: 'vi',\n  Japanese: 'ja',\n  'Portuguese BR': 'pt-br',\n};\n\nexport enum FileMimeType {\n  Bmp = 'image/bmp',\n  Csv = 'text/csv',\n  Odt = 'application/vnd.oasis.opendocument.text',\n  Doc = 'application/msword',\n  Docx = 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n  Gif = 'image/gif',\n  Htm = 'text/htm',\n  Html = 'text/html',\n  Jpg = 'image/jpg',\n  Jpeg = 'image/jpeg',\n  Pdf = 'application/pdf',\n  Png = 'image/png',\n  Ppt = 'application/vnd.ms-powerpoint',\n  Pptx = 'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n  Tiff = 'image/tiff',\n  Txt = 'text/plain',\n  Xls = 'application/vnd.ms-excel',\n  Xlsx = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n  Mp4 = 'video/mp4',\n  Json = 'application/json',\n}\n\nexport const Domain = 'demo.ragflow.io';\n\n//#region file preview\nexport const Images = [\n  'jpg',\n  'jpeg',\n  'png',\n  'gif',\n  'bmp',\n  'tif',\n  'tiff',\n  'webp',\n  // 'svg',\n  'ico',\n];\n\n// Without FileViewer\nexport const ExceptiveType = ['xlsx', 'xls', 'pdf', 'docx', ...Images];\n\nexport const SupportedPreviewDocumentTypes = [...ExceptiveType];\n//#endregion\n","import { LlmIcon } from '@/components/svg-icon';\nimport { LlmModelType } from '@/constants/knowledge';\nimport { ResponseGetType } from '@/interfaces/database/base';\nimport {\n  IFactory,\n  IMyLlmValue,\n  IConfiguredLlmValue,\n  IThirdOAIModelCollection as IThirdAiModelCollection,\n  IThirdOAIModelCollection,\n} from '@/interfaces/database/llm';\nimport {\n  IAddLlmRequestBody,\n  IDeleteLlmRequestBody,\n} from '@/interfaces/request/llm';\nimport userService from '@/services/user-service';\nimport { sortLLmFactoryListBySpecifiedOrder } from '@/utils/common-util';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { Flex, message } from 'antd';\nimport { DefaultOptionType } from 'antd/es/select';\nimport { useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport const useFetchLlmList = (\n  modelType?: LlmModelType,\n): IThirdAiModelCollection => {\n  const { data } = useQuery({\n    queryKey: ['llmList'],\n    initialData: {},\n    queryFn: async () => {\n      const { data } = await userService.llm_list({ model_type: modelType });\n\n      return data?.data ?? {};\n    },\n  });\n\n  return data;\n};\n\nexport const useSelectLlmOptions = () => {\n  const llmInfo: IThirdOAIModelCollection = useFetchLlmList();\n\n  const embeddingModelOptions = useMemo(() => {\n    return Object.entries(llmInfo).map(([key, value]) => {\n      return {\n        label: key,\n        options: value.map((x) => ({\n          label: x.llm_name,\n          value: `${x.llm_name}@${x.fid}`,\n          disabled: !x.available,\n        })),\n      };\n    });\n  }, [llmInfo]);\n\n  return embeddingModelOptions;\n};\n\nconst getLLMIconName = (fid: string, llm_name: string) => {\n  if (fid === 'FastEmbed') {\n    return llm_name.split('/').at(0) ?? '';\n  }\n\n  return fid;\n};\n\nexport const useSelectLlmOptionsByModelType = () => {\n  const llmInfo: IThirdOAIModelCollection = useFetchLlmList();\n\n  const groupOptionsByModelType = (modelType: LlmModelType) => {\n    return Object.entries(llmInfo)\n      .filter(([, value]) =>\n        modelType ? value.some((x) => x.model_type.includes(modelType)) : true,\n      )\n      .map(([key, value]) => {\n        return {\n          label: key,\n          options: value\n            .filter(\n              (x) =>\n                (modelType ? x.model_type.includes(modelType) : true) &&\n                x.available,\n            )\n            .map((x) => ({\n              label: (\n                <Flex align=\"center\" gap={6}>\n                  <LlmIcon\n                    name={getLLMIconName(x.fid, x.llm_name)}\n                    width={26}\n                    height={26}\n                    size={'small'}\n                  />\n                  <span>{x.llm_name}</span>\n                </Flex>\n              ),\n              value: `${x.llm_name}@${x.fid}`,\n              disabled: !x.available,\n            })),\n        };\n      })\n      .filter((x) => x.options.length > 0);\n  };\n\n  return {\n    [LlmModelType.Chat]: groupOptionsByModelType(LlmModelType.Chat),\n    [LlmModelType.Embedding]: groupOptionsByModelType(LlmModelType.Embedding),\n    [LlmModelType.Image2text]: groupOptionsByModelType(LlmModelType.Image2text),\n    [LlmModelType.Speech2text]: groupOptionsByModelType(\n      LlmModelType.Speech2text,\n    ),\n    [LlmModelType.Rerank]: groupOptionsByModelType(LlmModelType.Rerank),\n    [LlmModelType.TTS]: groupOptionsByModelType(LlmModelType.TTS),\n  };\n};\n\nexport const useComposeLlmOptionsByModelTypes = (\n  modelTypes: LlmModelType[],\n) => {\n  const allOptions = useSelectLlmOptionsByModelType();\n\n  return modelTypes.reduce<DefaultOptionType[]>((pre, cur) => {\n    const options = allOptions[cur];\n    options.forEach((x) => {\n      const item = pre.find((y) => y.label === x.label);\n      if (item) {\n        item.options.push(...x.options);\n      } else {\n        pre.push(x);\n      }\n    });\n\n    return pre;\n  }, []);\n};\n\nexport const useFetchLlmFactoryList = (): ResponseGetType<IFactory[]> => {\n  const { data, isFetching: loading } = useQuery({\n    queryKey: ['factoryList'],\n    initialData: [],\n    gcTime: 0,\n    queryFn: async () => {\n      const { data } = await userService.factories_list();\n\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading };\n};\n\nexport type LlmItem = { name: string; logo: string } & IMyLlmValue;\n\nexport const useFetchMyLlmList = (): ResponseGetType<\n  Record<string, IMyLlmValue>\n> => {\n  const { data, isFetching: loading } = useQuery({\n    queryKey: ['myLlmList'],\n    initialData: {},\n    gcTime: 0,\n    queryFn: async () => {\n      const { data } = await userService.my_llm();\n\n      return data?.data ?? {};\n    },\n  });\n\n  return { data, loading };\n};\n\n\nexport const useFetchConfiguredLlms = (): ResponseGetType<\n  Record<string, IConfiguredLlmValue>\n> => {\n  const { data, isFetching: loading } = useQuery({\n    queryKey: ['configuredLlmList'],\n    initialData: {},\n    gcTime: 0,\n    queryFn: async () => {\n      const { data } = await userService.configured_llm_list();\n\n      return data?.data ?? {};\n    },\n  });\n\n  return { data, loading };\n};\n\nexport const useSelectLlmList = () => {\n  const { data: myLlmList, loading: myLlmListLoading } = useFetchMyLlmList();\n  const { data: factoryList, loading: factoryListLoading } =\n    useFetchLlmFactoryList();\n\n  const nextMyLlmList: Array<LlmItem> = useMemo(() => {\n    return Object.entries(myLlmList).map(([key, value]) => ({\n      name: key,\n      logo: factoryList.find((x) => x.name === key)?.logo ?? '',\n      ...value,\n    }));\n  }, [myLlmList, factoryList]);\n\n  const nextFactoryList = useMemo(() => {\n    const currentList = factoryList.filter((x) =>\n      Object.keys(myLlmList).every((y) => y !== x.name),\n    );\n    return sortLLmFactoryListBySpecifiedOrder(currentList);\n  }, [factoryList, myLlmList]);\n\n  return {\n    myLlmList: nextMyLlmList,\n    factoryList: nextFactoryList,\n    loading: myLlmListLoading || factoryListLoading,\n  };\n};\n\nexport interface IApiKeySavingParams {\n  llm_factory: string;\n  api_key: string;\n  llm_name?: string;\n  model_type?: string;\n  base_url?: string;\n}\n\nexport const useSaveApiKey = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['saveApiKey'],\n    mutationFn: async (params: IApiKeySavingParams) => {\n      const { data } = await userService.set_api_key(params);\n      if (data.code === 0) {\n        message.success(t('message.modified'));\n        queryClient.invalidateQueries({ queryKey: ['myLlmList'] });\n        queryClient.invalidateQueries({ queryKey: ['factoryList'] });\n      }\n      return data.code;\n    },\n  });\n\n  return { data, loading, saveApiKey: mutateAsync };\n};\n\nexport interface ISystemModelSettingSavingParams {\n  tenant_id: string;\n  name?: string;\n  asr_id: string;\n  embd_id: string;\n  img2txt_id: string;\n  llm_id: string;\n}\n\nexport const useSaveTenantInfo = () => {\n  const { t } = useTranslation();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['saveTenantInfo'],\n    mutationFn: async (params: ISystemModelSettingSavingParams) => {\n      const { data } = await userService.set_tenant_info(params);\n      if (data.code === 0) {\n        message.success(t('message.modified'));\n      }\n      return data.code;\n    },\n  });\n\n  return { data, loading, saveTenantInfo: mutateAsync };\n};\n\nexport const useAddLlm = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['addLlm'],\n    mutationFn: async (params: IAddLlmRequestBody) => {\n      const { data } = await userService.add_llm(params);\n      if (data.code === 0) {\n        queryClient.invalidateQueries({ queryKey: ['myLlmList'] });\n        queryClient.invalidateQueries({ queryKey: ['factoryList'] });\n        message.success(t('message.modified'));\n      }\n      return data.code;\n    },\n  });\n\n  return { data, loading, addLlm: mutateAsync };\n};\n\nexport const useDeleteLlm = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['deleteLlm'],\n    mutationFn: async (params: IDeleteLlmRequestBody) => {\n      const { data } = await userService.delete_llm(params);\n      if (data.code === 0) {\n        queryClient.invalidateQueries({ queryKey: ['myLlmList'] });\n        queryClient.invalidateQueries({ queryKey: ['factoryList'] });\n        message.success(t('message.deleted'));\n      }\n      return data.code;\n    },\n  });\n\n  return { data, loading, deleteLlm: mutateAsync };\n};\n\nexport const useDeleteFactory = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['deleteFactory'],\n    mutationFn: async (params: IDeleteLlmRequestBody) => {\n      const { data } = await userService.deleteFactory(params);\n      if (data.code === 0) {\n        queryClient.invalidateQueries({ queryKey: ['myLlmList'] });\n        queryClient.invalidateQueries({ queryKey: ['factoryList'] });\n        message.success(t('message.deleted'));\n      }\n      return data.code;\n    },\n  });\n\n  return { data, loading, deleteFactory: mutateAsync };\n};\n","import { LanguageTranslationMap } from '@/constants/common';\nimport { ResponseGetType } from '@/interfaces/database/base';\nimport { IToken } from '@/interfaces/database/chat';\nimport { ITenantInfo } from '@/interfaces/database/knowledge';\nimport {\n  ISystemStatus,\n  ITenant,\n  ITenantUser,\n  IUserInfo,\n} from '@/interfaces/database/user-setting';\nimport userService, {\n  addTenantUser,\n  agreeTenant,\n  deleteTenantUser,\n  listTenant,\n  listTenantUser,\n} from '@/services/user-service';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { Modal, message } from 'antd';\nimport DOMPurify from 'dompurify';\nimport { isEmpty } from 'lodash';\nimport { useCallback, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { history } from 'umi';\n\nexport const useFetchUserInfo = (): ResponseGetType<IUserInfo> => {\n  const { i18n } = useTranslation();\n\n  const { data, isFetching: loading } = useQuery({\n    queryKey: ['userInfo'],\n    initialData: {},\n    gcTime: 0,\n    queryFn: async () => {\n      const { data } = await userService.user_info();\n      if (data.code === 0) {\n        i18n.changeLanguage(\n          LanguageTranslationMap[\n            data.data.language as keyof typeof LanguageTranslationMap\n          ],\n        );\n      }\n      return data?.data ?? {};\n    },\n  });\n\n  return { data, loading };\n};\n\nexport const useFetchTenantInfo = (\n  showEmptyModelWarn = false,\n): ResponseGetType<ITenantInfo> => {\n  const { t } = useTranslation();\n  const { data, isFetching: loading } = useQuery({\n    queryKey: ['tenantInfo'],\n    initialData: {},\n    gcTime: 0,\n    queryFn: async () => {\n      const { data: res } = await userService.get_tenant_info();\n      if (res.code === 0) {\n        // llm_id is chat_id\n        // asr_id is speech2txt\n        const { data } = res;\n        if (\n          showEmptyModelWarn &&\n          (isEmpty(data.embd_id) || isEmpty(data.llm_id))\n        ) {\n          /*Modal.warning({\n            title: t('common.warn'),\n            content: (\n              <div\n                dangerouslySetInnerHTML={{\n                  __html: DOMPurify.sanitize(t('setting.modelProvidersWarn')),\n                }}\n              ></div>\n            ),\n            onOk() {\n              history.push('/user-setting/model');\n            },\n          });*/\n        }\n        data.chat_id = data.llm_id;\n        data.speech2text_id = data.asr_id;\n\n        return data;\n      }\n\n      return res;\n    },\n  });\n\n  return { data, loading };\n};\n\nexport const useSelectParserList = (): Array<{\n  value: string;\n  label: string;\n}> => {\n  const { data: tenantInfo } = useFetchTenantInfo(true);\n\n  const parserList = useMemo(() => {\n    const parserArray: Array<string> = tenantInfo?.parser_ids?.split(',') ?? [];\n    return parserArray.map((x) => {\n      const arr = x.split(':');\n      return { value: arr[0], label: arr[1] };\n    });\n  }, [tenantInfo]);\n\n  return parserList;\n};\n\nexport const useSaveSetting = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['saveSetting'],\n    mutationFn: async (\n      userInfo: { new_password: string } | Partial<IUserInfo>,\n    ) => {\n      const { data } = await userService.setting(userInfo);\n      if (data.code === 0) {\n        message.success(t('message.modified'));\n        queryClient.invalidateQueries({ queryKey: ['userInfo'] });\n      }\n      return data?.code;\n    },\n  });\n\n  return { data, loading, saveSetting: mutateAsync };\n};\n\nexport const useFetchSystemVersion = () => {\n  const [version, setVersion] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const fetchSystemVersion = useCallback(async () => {\n    try {\n      setLoading(true);\n      const { data } = await userService.getSystemVersion();\n      if (data.code === 0) {\n        setVersion(data.data);\n        setLoading(false);\n      }\n    } catch (error) {\n      setLoading(false);\n    }\n  }, []);\n\n  return { fetchSystemVersion, version, loading };\n};\n\nexport const useFetchSystemStatus = () => {\n  const [systemStatus, setSystemStatus] = useState<ISystemStatus>(\n    {} as ISystemStatus,\n  );\n  const [loading, setLoading] = useState(false);\n\n  const fetchSystemStatus = useCallback(async () => {\n    setLoading(true);\n    const { data } = await userService.getSystemStatus();\n    if (data.code === 0) {\n      setSystemStatus(data.data);\n      setLoading(false);\n    }\n  }, []);\n\n  return {\n    systemStatus,\n    fetchSystemStatus,\n    loading,\n  };\n};\n\nexport const useFetchManualSystemTokenList = () => {\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['fetchManualSystemTokenList'],\n    mutationFn: async () => {\n      const { data } = await userService.listToken();\n\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, fetchSystemTokenList: mutateAsync };\n};\n\nexport const useFetchSystemTokenList = () => {\n  const {\n    data,\n    isFetching: loading,\n    refetch,\n  } = useQuery<IToken[]>({\n    queryKey: ['fetchSystemTokenList'],\n    initialData: [],\n    gcTime: 0,\n    queryFn: async () => {\n      const { data } = await userService.listToken();\n\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, refetch };\n};\n\nexport const useRemoveSystemToken = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['removeSystemToken'],\n    mutationFn: async (token: string) => {\n      const { data } = await userService.removeToken({}, token);\n      if (data.code === 0) {\n        message.success(t('message.deleted'));\n        queryClient.invalidateQueries({ queryKey: ['fetchSystemTokenList'] });\n      }\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, removeToken: mutateAsync };\n};\n\nexport const useCreateSystemToken = () => {\n  const queryClient = useQueryClient();\n\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['createSystemToken'],\n    mutationFn: async (params: Record<string, any>) => {\n      const { data } = await userService.createToken(params);\n      if (data.code === 0) {\n        queryClient.invalidateQueries({ queryKey: ['fetchSystemTokenList'] });\n      }\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, createToken: mutateAsync };\n};\n\nexport const useListTenantUser = () => {\n  const { data: tenantInfo } = useFetchTenantInfo();\n  const tenantId = tenantInfo.tenant_id;\n  const {\n    data,\n    isFetching: loading,\n    refetch,\n  } = useQuery<ITenantUser[]>({\n    queryKey: ['listTenantUser', tenantId],\n    initialData: [],\n    gcTime: 0,\n    enabled: !!tenantId,\n    queryFn: async () => {\n      const { data } = await listTenantUser(tenantId);\n\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, refetch };\n};\n\nexport const useAddTenantUser = () => {\n  const { data: tenantInfo } = useFetchTenantInfo();\n  const queryClient = useQueryClient();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['addTenantUser'],\n    mutationFn: async (email: string) => {\n      const { data } = await addTenantUser(tenantInfo.tenant_id, email);\n      if (data.code === 0) {\n        queryClient.invalidateQueries({ queryKey: ['listTenantUser'] });\n      }\n      return data?.code;\n    },\n  });\n\n  return { data, loading, addTenantUser: mutateAsync };\n};\n\nexport const useDeleteTenantUser = () => {\n  const { data: tenantInfo } = useFetchTenantInfo();\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['deleteTenantUser'],\n    mutationFn: async ({\n      userId,\n      tenantId,\n    }: {\n      userId: string;\n      tenantId?: string;\n    }) => {\n      const { data } = await deleteTenantUser({\n        tenantId: tenantId ?? tenantInfo.tenant_id,\n        userId,\n      });\n      if (data.code === 0) {\n        message.success(t('message.deleted'));\n        queryClient.invalidateQueries({ queryKey: ['listTenantUser'] });\n        queryClient.invalidateQueries({ queryKey: ['listTenant'] });\n      }\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, deleteTenantUser: mutateAsync };\n};\n\nexport const useListTenant = () => {\n  const { data: tenantInfo } = useFetchTenantInfo();\n  const tenantId = tenantInfo.tenant_id;\n  const {\n    data,\n    isFetching: loading,\n    refetch,\n  } = useQuery<ITenant[]>({\n    queryKey: ['listTenant', tenantId],\n    initialData: [],\n    gcTime: 0,\n    enabled: !!tenantId,\n    queryFn: async () => {\n      const { data } = await listTenant();\n\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, refetch };\n};\n\nexport const useAgreeTenant = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['agreeTenant'],\n    mutationFn: async (tenantId: string) => {\n      const { data } = await agreeTenant(tenantId);\n      if (data.code === 0) {\n        message.success(t('message.operated'));\n        queryClient.invalidateQueries({ queryKey: ['listTenant'] });\n      }\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, agreeTenant: mutateAsync };\n};\n","import api from '@/utils/api';\nimport registerServer from '@/utils/register-server';\nimport request, { post } from '@/utils/request';\n\nconst {\n  login,\n  logout,\n  register,\n  setting,\n  user_info,\n  tenant_info,\n  factories_list,\n  llm_list,\n  my_llm,\n  configured_llms,\n  set_api_key,\n  set_tenant_info,\n  add_llm,\n  delete_llm,\n  deleteFactory,\n  getSystemStatus,\n  getSystemVersion,\n  getSystemTokenList,\n  removeSystemToken,\n  createSystemToken,\n} = api;\n\nconst methods = {\n  login: {\n    url: login,\n    method: 'post',\n  },\n  logout: {\n    url: logout,\n    method: 'get',\n  },\n  register: {\n    url: register,\n    method: 'post',\n  },\n  setting: {\n    url: setting,\n    method: 'post',\n  },\n  user_info: {\n    url: user_info,\n    method: 'get',\n  },\n  get_tenant_info: {\n    url: tenant_info,\n    method: 'get',\n  },\n  set_tenant_info: {\n    url: set_tenant_info,\n    method: 'post',\n  },\n  factories_list: {\n    url: factories_list,\n    method: 'get',\n  },\n  llm_list: {\n    url: llm_list,\n    method: 'get',\n  },\n  my_llm: {\n    url: my_llm,\n    method: 'get',\n  },\n  configured_llm_list: {\n    url: configured_llms,\n    method: 'get',\n  },\n  set_api_key: {\n    url: set_api_key,\n    method: 'post',\n  },\n  add_llm: {\n    url: add_llm,\n    method: 'post',\n  },\n  delete_llm: {\n    url: delete_llm,\n    method: 'post',\n  },\n  getSystemStatus: {\n    url: getSystemStatus,\n    method: 'get',\n  },\n  getSystemVersion: {\n    url: getSystemVersion,\n    method: 'get',\n  },\n  deleteFactory: {\n    url: deleteFactory,\n    method: 'post',\n  },\n  listToken: {\n    url: getSystemTokenList,\n    method: 'get',\n  },\n  createToken: {\n    url: createSystemToken,\n    method: 'post',\n  },\n  removeToken: {\n    url: removeSystemToken,\n    method: 'delete',\n  },\n} as const;\n\nconst userService = registerServer<keyof typeof methods>(methods, request);\n\nexport const listTenantUser = (tenantId: string) =>\n  request.get(api.listTenantUser(tenantId));\n\nexport const addTenantUser = (tenantId: string, email: string) =>\n  post(api.addTenantUser(tenantId), { email });\n\nexport const deleteTenantUser = ({\n  tenantId,\n  userId,\n}: {\n  tenantId: string;\n  userId: string;\n}) => request.delete(api.deleteTenantUser(tenantId, userId));\n\nexport const listTenant = () => request.get(api.listTenant);\n\nexport const agreeTenant = (tenantId: string) =>\n  request.put(api.agreeTenant(tenantId));\n\nexport default userService;\n","//let api_host = `http://127.0.0.1:9380/v1`;\nlet api_host = \"http://ec2-44-212-5-246.compute-1.amazonaws.com:9380/v1\"; \nexport { api_host }; \n\nexport default {\n  // user\n  login: `${api_host}/user/login`,\n  logout: `${api_host}/user/logout`,\n  register: `${api_host}/user/register`,\n  setting: `${api_host}/user/setting`,\n  user_info: `${api_host}/user/info`,\n  tenant_info: `${api_host}/user/tenant_info`,\n  set_tenant_info: `${api_host}/user/set_tenant_info`,\n\n  // team\n  addTenantUser: (tenantId: string) => `${api_host}/tenant/${tenantId}/user`,\n  listTenantUser: (tenantId: string) =>\n    `${api_host}/tenant/${tenantId}/user/list`,\n  deleteTenantUser: (tenantId: string, userId: string) =>\n    `${api_host}/tenant/${tenantId}/user/${userId}`,\n  listTenant: `${api_host}/tenant/list`,\n  agreeTenant: (tenantId: string) => `${api_host}/tenant/agree/${tenantId}`,\n\n  // llm model\n  factories_list: `${api_host}/llm/factories`,\n  llm_list: `${api_host}/llm/list`,\n  my_llm: `${api_host}/llm/my_llms`,\n  configured_llms: `${api_host}/llm/configured_llms`,\n  set_api_key: `${api_host}/llm/set_api_key`,\n  add_llm: `${api_host}/llm/add_llm`,\n  delete_llm: `${api_host}/llm/delete_llm`,\n  deleteFactory: `${api_host}/llm/delete_factory`,\n\n  // knowledge base\n  kb_list: `${api_host}/kb/list`,\n  create_kb: `${api_host}/kb/create`,\n  update_kb: `${api_host}/kb/update`,\n  rm_kb: `${api_host}/kb/rm`,\n  get_kb_detail: `${api_host}/kb/detail`,\n  getKnowledgeGraph: (knowledgeId: string) =>\n    `${api_host}/kb/${knowledgeId}/knowledge_graph`,\n\n  // tags\n  listTag: (knowledgeId: string) => `${api_host}/kb/${knowledgeId}/tags`,\n  listTagByKnowledgeIds: `${api_host}/kb/tags`,\n  removeTag: (knowledgeId: string) => `${api_host}/kb/${knowledgeId}/rm_tags`,\n  renameTag: (knowledgeId: string) =>\n    `${api_host}/kb/${knowledgeId}/rename_tag`,\n\n  // chunk\n  chunk_list: `${api_host}/chunk/list`,\n  create_chunk: `${api_host}/chunk/create`,\n  set_chunk: `${api_host}/chunk/set`,\n  get_chunk: `${api_host}/chunk/get`,\n  switch_chunk: `${api_host}/chunk/switch`,\n  rm_chunk: `${api_host}/chunk/rm`,\n  retrieval_test: `${api_host}/chunk/retrieval_test`,\n  knowledge_graph: `${api_host}/chunk/knowledge_graph`,\n\n  // document\n  get_document_list: `${api_host}/document/list`,\n  document_change_status: `${api_host}/document/change_status`,\n  document_rm: `${api_host}/document/rm`,\n  document_delete: `${api_host}/api/document`,\n  document_rename: `${api_host}/document/rename`,\n  document_create: `${api_host}/document/create`,\n  document_run: `${api_host}/document/run`,\n  document_change_parser: `${api_host}/document/change_parser`,\n  document_thumbnails: `${api_host}/document/thumbnails`,\n  get_document_file: `${api_host}/document/get`,\n  document_upload: `${api_host}/document/upload`,\n  web_crawl: `${api_host}/document/web_crawl`,\n  document_infos: `${api_host}/document/infos`,\n  upload_and_parse: `${api_host}/document/upload_and_parse`,\n  parse: `${api_host}/document/parse`,\n  setMeta: `${api_host}/document/set_meta`,\n\n  // chat\n  setDialog: `${api_host}/dialog/set`,\n  getDialog: `${api_host}/dialog/get`,\n  removeDialog: `${api_host}/dialog/rm`,\n  listDialog: `${api_host}/dialog/list`,\n  setConversation: `${api_host}/conversation/set`,\n  getConversation: `${api_host}/conversation/get`,\n  getConversationSSE: `${api_host}/conversation/getsse`,\n  listConversation: `${api_host}/conversation/list`,\n  removeConversation: `${api_host}/conversation/rm`,\n  completeConversation: `${api_host}/conversation/completion`,\n  deleteMessage: `${api_host}/conversation/delete_msg`,\n  thumbup: `${api_host}/conversation/thumbup`,\n  tts: `${api_host}/conversation/tts`,\n  ask: `${api_host}/conversation/ask`,\n  mindmap: `${api_host}/conversation/mindmap`,\n  getRelatedQuestions: `${api_host}/conversation/related_questions`,\n  // chat for external\n  createToken: `${api_host}/api/new_token`,\n  listToken: `${api_host}/api/token_list`,\n  removeToken: `${api_host}/api/rm`,\n  getStats: `${api_host}/api/stats`,\n  createExternalConversation: `${api_host}/api/new_conversation`,\n  getExternalConversation: `${api_host}/api/conversation`,\n  completeExternalConversation: `${api_host}/api/completion`,\n  uploadAndParseExternal: `${api_host}/api/document/upload_and_parse`,\n\n  // file manager\n  //listFile: `${api_host}/file/list`,\n  listFile: `${api_host}/file/listall`,\n  uploadFile: `${api_host}/file/upload`,\n  removeFile: `${api_host}/file/rm`,\n  renameFile: `${api_host}/file/rename`,\n  getAllParentFolder: `${api_host}/file/all_parent_folder`,\n  createFolder: `${api_host}/file/create`,\n  connectFileToKnowledge: `${api_host}/file2document/convert`,\n  getFile: `${api_host}/file/get`,\n  moveFile: `${api_host}/file/mv`,\n\n  // system\n  getSystemVersion: `${api_host}/system/version`,\n  getSystemStatus: `${api_host}/system/status`,\n  getSystemTokenList: `${api_host}/system/token_list`,\n  createSystemToken: `${api_host}/system/new_token`,\n  listSystemToken: `${api_host}/system/token_list`,\n  removeSystemToken: `${api_host}/system/token`,\n\n  // flow\n  listTemplates: `${api_host}/canvas/templates`,\n  listCanvas: `${api_host}/canvas/list`,\n  getCanvas: `${api_host}/canvas/get`,\n  getCanvasSSE: `${api_host}/canvas/getsse`,\n  removeCanvas: `${api_host}/canvas/rm`,\n  setCanvas: `${api_host}/canvas/set`,\n  resetCanvas: `${api_host}/canvas/reset`,\n  runCanvas: `${api_host}/canvas/completion`,\n  testDbConnect: `${api_host}/canvas/test_db_connect`,\n  getInputElements: `${api_host}/canvas/input_elements`,\n  debug: `${api_host}/canvas/debug`,\n};\n","import { variableEnabledFieldMap } from '@/constants/chat';\nimport omit from 'lodash/omit';\n\n// chat model setting and generate operator\nexport const excludeUnEnabledVariables = (\n  values: any = {},\n  prefix = 'llm_setting.',\n) => {\n  const unEnabledFields: Array<keyof typeof variableEnabledFieldMap> =\n    Object.keys(variableEnabledFieldMap).filter((key) => !values[key]) as Array<\n      keyof typeof variableEnabledFieldMap\n    >;\n\n  return unEnabledFields.map(\n    (key) => `${prefix}${variableEnabledFieldMap[key]}`,\n  );\n};\n\n// chat model setting and generate operator\nexport const removeUselessFieldsFromValues = (values: any, prefix?: string) => {\n  const nextValues: any = omit(values, [\n    ...Object.keys(variableEnabledFieldMap),\n    'parameter',\n    ...excludeUnEnabledVariables(values, prefix),\n  ]);\n\n  return nextValues;\n};\n","import omit from 'lodash/omit';\nimport { RequestMethod } from 'umi-request';\n\ntype Service<T extends string> = Record<\n  T,\n  (params?: any, urlAppendix?: string) => any\n>;\n\nconst Methods = ['post', 'delete', 'put'];\n\nconst registerServer = <T extends string>(\n  opt: Record<T, { url: string; method: string }>,\n  request: RequestMethod,\n) => {\n  const server: Service<T> = {} as Service<T>;\n  for (let key in opt) {\n    server[key] = (params?: any, urlAppendix?: string) => {\n      let url = opt[key].url;\n      const requestOptions = opt[key];\n      if (urlAppendix) {\n        url = url + '/' + urlAppendix;\n      }\n      if (Methods.some((x) => x === opt[key].method.toLowerCase())) {\n        return request(url, {\n          method: opt[key].method,\n          data: params,\n        });\n      }\n\n      if (opt[key].method === 'get' || opt[key].method === 'GET') {\n        return request.get(url, {\n          ...omit(requestOptions, ['method', 'url']),\n          params,\n        });\n      }\n    };\n  }\n  return server;\n};\n\nexport default registerServer;\n","import { Authorization } from '@/constants/authorization';\nimport { ResponseType } from '@/interfaces/database/base';\nimport i18n from '@/locales/config';\nimport authorizationUtil, {\n  getAuthorization,\n} from '@/utils/authorization-util';\nimport { message, notification } from 'antd';\nimport { history } from 'umi';\nimport { RequestMethod, extend } from 'umi-request';\nimport { convertTheKeysOfTheObjectToSnake } from './common-util';\n\nconst FAILED_TO_FETCH = 'Failed to fetch';\n\nconst RetcodeMessage = {\n  200: i18n.t('message.200'),\n  201: i18n.t('message.201'),\n  202: i18n.t('message.202'),\n  204: i18n.t('message.204'),\n  400: i18n.t('message.400'),\n  401: i18n.t('message.401'),\n  403: i18n.t('message.403'),\n  404: i18n.t('message.404'),\n  406: i18n.t('message.406'),\n  410: i18n.t('message.410'),\n  413: i18n.t('message.413'),\n  422: i18n.t('message.422'),\n  500: i18n.t('message.500'),\n  502: i18n.t('message.502'),\n  503: i18n.t('message.503'),\n  504: i18n.t('message.504'),\n};\ntype ResultCode =\n  | 200\n  | 201\n  | 202\n  | 204\n  | 400\n  | 401\n  | 403\n  | 404\n  | 406\n  | 410\n  | 413\n  | 422\n  | 500\n  | 502\n  | 503\n  | 504;\n\nconst errorHandler = (error: {\n  response: Response;\n  message: string;\n}): Response => {\n  const { response } = error;\n  if (error.message === FAILED_TO_FETCH) {\n    notification.error({\n      description: i18n.t('message.networkAnomalyDescription'),\n      message: i18n.t('message.networkAnomaly'),\n    });\n  } else {\n    if (response && response.status) {\n      const errorText =\n        RetcodeMessage[response.status as ResultCode] || response.statusText;\n      const { status, url } = response;\n      notification.error({\n        message: `${i18n.t('message.requestError')} ${status}: ${url}`,\n        description: errorText,\n      });\n    }\n  }\n  return response;\n};\n\nconst request: RequestMethod = extend({\n  errorHandler,\n  timeout: 300000,\n  getResponse: true,\n});\n\nrequest.interceptors.request.use((url: string, options: any) => {\n  const data = convertTheKeysOfTheObjectToSnake(options.data);\n  const params = convertTheKeysOfTheObjectToSnake(options.params);\n\n  return {\n    url,\n    options: {\n      ...options,\n      data,\n      params,\n      headers: {\n        ...(options.skipToken\n          ? undefined\n          : { [Authorization]: getAuthorization() }),\n        ...options.headers,\n      },\n      interceptors: true,\n    },\n  };\n});\n\nrequest.interceptors.response.use(async (response: any, options) => {\n  if (response?.status === 413 || response?.status === 504) {\n    message.error(RetcodeMessage[response?.status as ResultCode]);\n  }\n\n  if (options.responseType === 'blob') {\n    return response;\n  }\n\n  const data: ResponseType = await response?.clone()?.json();\n  if (data?.code === 100) {\n    message.error(data?.message);\n  } else if (data?.code === 401) {\n    notification.error({\n      message: data?.message,\n      description: data?.message,\n      duration: 3,\n    });\n    authorizationUtil.removeAll();\n    history.push('/login'); // Will not jump to the login page\n  } else if (data?.code !== 0) {\n    notification.error({\n      message: `${i18n.t('message.hint')} : ${data?.code}`,\n      description: data?.message,\n      duration: 3,\n    });\n  }\n  return response;\n});\n\nexport default request;\n\nexport const get = (url: string) => {\n  return request.get(url);\n};\n\nexport const post = (url: string, body: any) => {\n  return request.post(url, { data: body });\n};\n\nexport const drop = () => {};\n\nexport const put = () => {};\n"],"names":["Paragraph","Typography","Link","_ref","visible","hideModal","_ref$token","token","form","_ref$beta","beta","isAgent","t","useTranslate","isDarkTheme","useIsDarkTheme","text","concat","location","origin","items","key","label","children","_jsx","Card","title","extra","CopyToClipboard","className","styles","HightLightMarkdown","_jsxs","Modal","keyPrefix","open","style","top","width","onOk","onCancel","Tabs","defaultActiveKey","onChange","console","log","copyable","cn","_defineProperty","href","target","useOperateApiKey","idKey","dialogId","removeToken","useRemoveSystemToken","_useCreateSystemToken","useCreateSystemToken","createToken","creatingLoading","loading","_useFetchSystemTokenL","useFetchSystemTokenList","tokenList","data","listLoading","showDeleteConfirm","useShowDeleteConfirm","useCallback","useFetchTokenListBeforeOtherStep","showTokenEmptyError","message","error","_useShowBetaEmptyErro","showBetaEmptyError","useShowBetaEmptyError","_useFetchManualSystem","useFetchManualSystemTokenList","fetchSystemTokenList","Array","isArray","length","handleOperate","_asyncToGenerator","_regeneratorRuntime","mark","_callee","ret","list","_list$","wrap","_context","prev","next","sent","abrupt","stop","useShowEmbedModal","_useSetModalState","useSetModalState","embedVisible","hideEmbedModal","showEmbedModal","showModal","_useFetchTokenListBef","_callee2","_context2","embedToken","usePreviewChat","window","from","arguments","undefined","_window$location","protocol","host","getUrlWithToken","SharedFrom","Agent","Chat","handlePreview","_callee3","_context3","knowledgeOptions","useFetchKnowledgeList","map","x","Space","name","value","id","Form","Item","tooltip","rules","required","type","Select","mode","options","placeholder","prefix","_ref$formItemLayout","formItemLayout","useFormInstance","parameterOptions","Object","values","ModelVariableType","camelCase","handleParametersChange","variable","settledModelVariableMap","nextVariable","setFieldsValue","memorizedPrefix","useMemo","modelOptions","useComposeLlmOptionsByModelTypes","LlmModelType","Image2text","_Fragment","_objectSpread","showSearch","Divider","initialValue","Precise","Flex","gap","align","valuePropName","noStyle","Switch","size","dependencies","_ref2","disabled","getFieldValue","flex","_toConsumableArray","Slider","max","step","InputNumber","min","_ref3","_ref4","_ref5","_ref6","_ref$isTooltipShown","isTooltipShown","_ref$vectorSimilarity","vectorSimilarityWeightName","_ref$initialValue","_ref$max","fileIconMap","aep","ai","avi","css","csv","dmg","doc","docx","eps","exe","fig","gif","html","indd","java","jpeg","jpg","js","json","mkv","mp3","mp4","mpeg","pdf","png","ppt","pptx","psd","rss","sql","svg","tiff","txt","wav","webp","xls","xlsx","xml","LanguageList","LanguageMap","English","Other_language","LanguageTranslationMap","Chinese","Indonesia","Spanish","Vietnamese","Japanese","FileMimeType","Domain","Images","ExceptiveType","SupportedPreviewDocumentTypes","useFetchLlmList","modelType","_queryFn","_useQuery","useQuery","queryKey","initialData","queryFn","_data$data","_yield$userService$ll","userService","llm_list","model_type","apply","useSelectLlmOptionsByModelType","llmInfo","groupOptionsByModelType","entries","filter","_slicedToArray","some","includes","available","LlmIcon","fid","llm_name","_llm_name$split$at","split","at","height","Embedding","Speech2text","Rerank","TTS","modelTypes","allOptions","reduce","pre","cur","forEach","_item$options","item","find","y","push","useFetchConfiguredLlms","_queryFn4","_useQuery4","gcTime","_callee4","_data$data4","_yield$userService$co","_context4","configured_llm_list","isFetching","useSelectLlmList","_queryFn3","_useQuery3","_queryFn2","_useQuery2","_useFetchMyLlmList","_data$data3","_yield$userService$my","my_llm","myLlmList","myLlmListLoading","_useFetchLlmFactoryLi","_data$data2","_yield$userService$fa","factories_list","factoryList","factoryListLoading","_ref8","_factoryList$find$log","_factoryList$find","_ref9","logo","currentList","keys","every","sortLLmFactoryListBySpecifiedOrder","useSaveApiKey","_mutationFn","queryClient","useQueryClient","useTranslation","_useMutation","useMutation","mutationKey","mutationFn","_callee5","params","_yield$userService$se","_context5","set_api_key","code","success","invalidateQueries","_x","isPending","saveApiKey","mutateAsync","useSaveTenantInfo","_mutationFn2","_useMutation2","_callee6","_yield$userService$se2","_context6","set_tenant_info","_x2","saveTenantInfo","useAddLlm","_mutationFn3","_useMutation3","_callee7","_yield$userService$ad","_context7","add_llm","_x3","addLlm","useDeleteLlm","_mutationFn4","_useMutation4","_callee8","_yield$userService$de","_context8","delete_llm","_x4","deleteLlm","useDeleteFactory","_mutationFn5","_useMutation5","_callee9","_yield$userService$de2","_context9","deleteFactory","_x5","useFetchUserInfo","i18n","_yield$userService$us","user_info","changeLanguage","language","useFetchTenantInfo","showEmptyModelWarn","_useTranslation2","_yield$userService$ge","res","_data","get_tenant_info","isEmpty","embd_id","llm_id","chat_id","speech2text_id","asr_id","useSelectParserList","tenantInfo","_tenantInfo$parser_id","_tenantInfo$parser_id2","parser_ids","arr","useSaveSetting","userInfo","setting","saveSetting","useFetchSystemVersion","_useState","useState","_useState2","version","setVersion","_useState3","_useState4","setLoading","fetchSystemVersion","_yield$userService$ge2","getSystemVersion","t0","useFetchSystemStatus","_useState5","_useState6","systemStatus","setSystemStatus","_useState7","_useState8","fetchSystemStatus","_yield$userService$ge3","getSystemStatus","_yield$userService$li","listToken","_yield$userService$li2","refetch","_yield$userService$re","_data$data5","_yield$userService$cr","useListTenantUser","tenantId","tenant_id","enabled","_callee10","_data$data6","_yield$listTenantUser","_context10","listTenantUser","useAddTenantUser","_callee11","email","_yield$addTenantUser","_context11","addTenantUser","useDeleteTenantUser","_mutationFn6","_useMutation6","_callee12","_data$data7","userId","_yield$deleteTenantUs","_context12","deleteTenantUser","useListTenant","_queryFn5","_useQuery5","_callee13","_data$data8","_yield$listTenant","_context13","listTenant","useAgreeTenant","_mutationFn7","_useMutation7","_callee14","_data$data9","_yield$agreeTenant","_context14","agreeTenant","_x6","login","api","logout","register","tenant_info","configured_llms","getSystemTokenList","removeSystemToken","methods","url","method","createSystemToken","registerServer","request","post","api_host","kb_list","create_kb","update_kb","rm_kb","get_kb_detail","getKnowledgeGraph","knowledgeId","listTag","listTagByKnowledgeIds","removeTag","renameTag","chunk_list","create_chunk","set_chunk","get_chunk","switch_chunk","rm_chunk","retrieval_test","knowledge_graph","get_document_list","document_change_status","document_rm","document_delete","document_rename","document_create","document_run","document_change_parser","document_thumbnails","get_document_file","document_upload","web_crawl","document_infos","upload_and_parse","parse","setMeta","setDialog","getDialog","removeDialog","listDialog","setConversation","getConversation","getConversationSSE","listConversation","removeConversation","completeConversation","deleteMessage","thumbup","tts","ask","mindmap","getRelatedQuestions","getStats","createExternalConversation","getExternalConversation","completeExternalConversation","uploadAndParseExternal","listFile","uploadFile","removeFile","renameFile","getAllParentFolder","createFolder","connectFileToKnowledge","getFile","moveFile","listSystemToken","listTemplates","listCanvas","getCanvas","getCanvasSSE","removeCanvas","setCanvas","resetCanvas","runCanvas","testDbConnect","getInputElements","debug","removeUselessFieldsFromValues","nextValues","omit","variableEnabledFieldMap","unEnabledFields","excludeUnEnabledVariables","Methods","opt","server","_loop","urlAppendix","requestOptions","toLowerCase","get","RetcodeMessage","extend","errorHandler","response","notification","description","status","errorText","statusText","timeout","getResponse","interceptors","use","convertTheKeysOfTheObjectToSnake","headers","skipToken","Authorization","getAuthorization","_response$clone","responseType","clone","duration","authorizationUtil","removeAll","history","body"],"sourceRoot":""}