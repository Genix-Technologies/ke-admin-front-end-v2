{"version":3,"file":"9658.05bdddc3.async.js","mappings":"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","sources":["webpack:///./src/hooks/file-manager-hooks.ts","webpack:///./src/services/file-manager-service.ts","webpack:///./src/utils/date.ts","webpack:///./src/utils/document-util.ts","webpack:///./src/utils/file-util.ts"],"sourcesContent":["import { ResponseType } from '@/interfaces/database/base';\nimport { IFolder } from '@/interfaces/database/file-manager';\nimport { IConnectRequestBody } from '@/interfaces/request/file-manager';\nimport fileManagerService from '@/services/file-manager-service';\nimport { downloadFileFromBlob } from '@/utils/file-util';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { PaginationProps, UploadFile, message } from 'antd';\nimport React, { useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSearchParams } from 'umi';\nimport {\n  useGetPaginationWithRouter,\n  useHandleSearchChange,\n} from './logic-hooks';\nimport { useSetPaginationParams } from './route-hook';\n\nexport const useGetFolderId = () => {\n  const [searchParams] = useSearchParams();\n  const id = searchParams.get('folderId') as string;\n\n  return id ?? '';\n};\n\nexport interface IListResult {\n  searchString: string;\n  handleInputChange: React.ChangeEventHandler<HTMLInputElement>;\n  pagination: PaginationProps;\n  setPagination: (pagination: { page: number; pageSize: number }) => void;\n  loading: boolean;\n}\n\nexport const useFetchPureFileList = () => {\n  const { mutateAsync, isPending: loading } = useMutation({\n    mutationKey: ['fetchPureFileList'],\n    gcTime: 0,\n\n    mutationFn: async (parentId: string) => {\n      const { data } = await fileManagerService.listFile({\n        parent_id: parentId,\n      });\n\n      return data;\n    },\n  });\n\n  return { loading, fetchList: mutateAsync };\n};\n\nexport const useFetchFileList = (): ResponseType<any> & IListResult => {\n  const { searchString, handleInputChange } = useHandleSearchChange();\n  const { pagination, setPagination } = useGetPaginationWithRouter();\n  const id = useGetFolderId();\n\n  const { data, isFetching: loading } = useQuery({\n    queryKey: [\n      'fetchFileList',\n      {\n        id,\n        searchString,\n        ...pagination,\n      },\n    ],\n    initialData: {},\n    gcTime: 0,\n    queryFn: async () => {\n      const { data } = await fileManagerService.listFile({\n        parent_id: id,\n        keywords: searchString,\n        page_size: pagination.pageSize,\n        page: pagination.current,\n      });\n\n      return data;\n    },\n  });\n\n  const onInputChange: React.ChangeEventHandler<HTMLInputElement> = useCallback(\n    (e) => {\n      setPagination({ page: 1 });\n      handleInputChange(e);\n    },\n    [handleInputChange, setPagination],\n  );\n\n  return {\n    ...data,\n    searchString,\n    handleInputChange: onInputChange,\n    pagination: { ...pagination, total: data?.data?.total },\n    setPagination,\n    loading,\n  };\n};\n\nexport const useDeleteFile = () => {\n  const { setPaginationParams } = useSetPaginationParams();\n  const queryClient = useQueryClient();\n\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['deleteFile'],\n    mutationFn: async (params: { fileIds: string[]; parentId: string }) => {\n      const { data } = await fileManagerService.removeFile(params);\n      if (data.code === 0) {\n        setPaginationParams(1); // TODO: There should be a better way to paginate the request list\n        queryClient.invalidateQueries({ queryKey: ['fetchFileList'] });\n      }\n      return data.code;\n    },\n  });\n\n  return { data, loading, deleteFile: mutateAsync };\n};\n\nexport const useDownloadFile = () => {\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['downloadFile'],\n    mutationFn: async (params: { id: string; filename?: string }) => {\n      const response = await fileManagerService.getFile({}, params.id);\n      const blob = new Blob([response.data], { type: response.data.type });\n      downloadFileFromBlob(blob, params.filename);\n    },\n  });\n  return { data, loading, downloadFile: mutateAsync };\n};\n\nexport const useRenameFile = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['renameFile'],\n    mutationFn: async (params: { fileId: string; name: string }) => {\n      const { data } = await fileManagerService.renameFile(params);\n      if (data.code === 0) {\n        message.success(t('message.renamed'));\n        queryClient.invalidateQueries({ queryKey: ['fetchFileList'] });\n      }\n      return data.code;\n    },\n  });\n\n  return { data, loading, renameFile: mutateAsync };\n};\n\nexport const useFetchParentFolderList = (): IFolder[] => {\n  const id = useGetFolderId();\n  const { data } = useQuery({\n    queryKey: ['fetchParentFolderList', id],\n    initialData: [],\n    enabled: !!id,\n    queryFn: async () => {\n      const { data } = await fileManagerService.getAllParentFolder({\n        fileId: id,\n      });\n\n      return data?.data?.parent_folders?.toReversed() ?? [];\n    },\n  });\n\n  return data;\n};\n\nexport const useCreateFolder = () => {\n  const { setPaginationParams } = useSetPaginationParams();\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['createFolder'],\n    mutationFn: async (params: { parentId: string; name: string }) => {\n      const { data } = await fileManagerService.createFolder({\n        ...params,\n        type: 'folder',\n      });\n      if (data.code === 0) {\n        message.success(t('message.created'));\n        setPaginationParams(1);\n        queryClient.invalidateQueries({ queryKey: ['fetchFileList'] });\n      }\n      return data.code;\n    },\n  });\n\n  return { data, loading, createFolder: mutateAsync };\n};\n\nexport const useUploadFile = () => {\n  const { setPaginationParams } = useSetPaginationParams();\n  const { t } = useTranslation();\n  const queryClient = useQueryClient();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['uploadFile'],\n    mutationFn: async (params: {\n      fileList: UploadFile[];\n      parentId: string;\n    }) => {\n      const fileList = params.fileList;\n      const pathList = params.fileList.map(\n        (file) => (file as any).webkitRelativePath,\n      );\n      const formData = new FormData();\n      formData.append('parent_id', params.parentId);\n      fileList.forEach((file: any, index: number) => {\n        formData.append('file', file);\n        formData.append('path', pathList[index]);\n      });\n      try {\n        const ret = await fileManagerService.uploadFile(formData);\n        if (ret?.data.code === 0) {\n          message.success(t('message.uploaded'));\n          setPaginationParams(1);\n          queryClient.invalidateQueries({ queryKey: ['fetchFileList'] });\n        }\n        return ret?.data?.code;\n      } catch (error) {\n        console.log('🚀 ~ useUploadFile ~ error:', error);\n      }\n    },\n  });\n\n  return { data, loading, uploadFile: mutateAsync };\n};\n\nexport const useConnectToKnowledge = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['connectFileToKnowledge'],\n    mutationFn: async (params: IConnectRequestBody) => {\n      const { data } = await fileManagerService.connectFileToKnowledge(params);\n      if (data.code === 0) {\n        message.success(t('message.operated'));\n        queryClient.invalidateQueries({ queryKey: ['fetchFileList'] });\n      }\n      return data.code;\n    },\n  });\n\n  return { data, loading, connectFileToKnowledge: mutateAsync };\n};\n\nexport interface IMoveFileBody {\n  src_file_ids: string[];\n  dest_file_id: string; // target folder id\n}\n\nexport const useMoveFile = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['moveFile'],\n    mutationFn: async (params: IMoveFileBody) => {\n      const { data } = await fileManagerService.moveFile(params);\n      if (data.code === 0) {\n        message.success(t('message.operated'));\n        queryClient.invalidateQueries({ queryKey: ['fetchFileList'] });\n      }\n      return data.code;\n    },\n  });\n\n  return { data, loading, moveFile: mutateAsync };\n};\n","import api from '@/utils/api';\nimport registerServer from '@/utils/register-server';\nimport request from '@/utils/request';\nimport pureRequest from 'axios';\n\nconst {\n  listFile,\n  removeFile,\n  uploadFile,\n  renameFile,\n  getAllParentFolder,\n  createFolder,\n  connectFileToKnowledge,\n  get_document_file,\n  getFile,\n  moveFile,\n} = api;\n\nconst methods = {\n  listFile: {\n    url: listFile,\n    method: 'get',\n  },\n  removeFile: {\n    url: removeFile,\n    method: 'post',\n  },\n  uploadFile: {\n    url: uploadFile,\n    method: 'post',\n  },\n  renameFile: {\n    url: renameFile,\n    method: 'post',\n  },\n  getAllParentFolder: {\n    url: getAllParentFolder,\n    method: 'get',\n  },\n  createFolder: {\n    url: createFolder,\n    method: 'post',\n  },\n  connectFileToKnowledge: {\n    url: connectFileToKnowledge,\n    method: 'post',\n  },\n  getFile: {\n    url: getFile,\n    method: 'get',\n    responseType: 'blob',\n  },\n  getDocumentFile: {\n    url: get_document_file,\n    method: 'get',\n    responseType: 'blob',\n  },\n  moveFile: {\n    url: moveFile,\n    method: 'post',\n  },\n} as const;\n\nconst fileManagerService = registerServer<keyof typeof methods>(\n  methods,\n  request,\n);\n\nexport default fileManagerService;\n\nexport const getDocumentFile = (documentId: string) => {\n  return pureRequest(getFile + '/' + documentId, {\n    responseType: 'blob',\n    method: 'get',\n    // headers: {\n    //   'content-type':\n    //     'text/plain;charset=UTF-8, application/vnd.openxmlformats-officeddocument.spreadsheetml.sheet;charset=UTF-8',\n    // },\n\n    // parseResponse: false,\n    // getResponse: true,\n  })\n    .then((res) => {\n      const x = res?.headers?.get('content-disposition');\n      const y = res?.headers?.get('Content-Type');\n      console.info(res);\n      console.info(x);\n      console.info('Content-Type', y);\n      return res;\n    })\n    .then((res) => {\n      // const objectURL = URL.createObjectURL(res);\n\n      // let btn = document.createElement('a');\n\n      // btn.download = '文件名.pdf';\n\n      // btn.href = objectURL;\n\n      // btn.click();\n\n      // URL.revokeObjectURL(objectURL);\n\n      // btn = null;\n\n      return res;\n    })\n    .catch((err) => {\n      console.info(err);\n    });\n};\n","import dayjs from 'dayjs';\n\nexport function formatDate(date: any) {\n  if (!date) {\n    return '';\n  }\n  return dayjs(date).format('DD/MM/YYYY HH:mm:ss');\n}\n\nexport function formatTime(date: any) {\n  if (!date) {\n    return '';\n  }\n  return dayjs(date).format('HH:mm:ss');\n}\n\nexport function today() {\n  return formatDate(dayjs());\n}\n\nexport function lastDay() {\n  return formatDate(dayjs().subtract(1, 'days'));\n}\n\nexport function lastWeek() {\n  return formatDate(dayjs().subtract(1, 'weeks'));\n}\n","import { Images, SupportedPreviewDocumentTypes } from '@/constants/common';\nimport { IReferenceChunk } from '@/interfaces/database/chat';\nimport { IChunk } from '@/interfaces/database/knowledge';\nimport { UploadFile } from 'antd';\nimport { get } from 'lodash';\nimport { v4 as uuid } from 'uuid';\n\nexport const buildChunkHighlights = (\n  selectedChunk: IChunk | IReferenceChunk,\n  size: { width: number; height: number },\n) => {\n  return Array.isArray(selectedChunk?.positions) &&\n    selectedChunk.positions.every((x) => Array.isArray(x))\n    ? selectedChunk?.positions?.map((x) => {\n        const boundingRect = {\n          width: size.width,\n          height: size.height,\n          x1: x[1],\n          x2: x[2],\n          y1: x[3],\n          y2: x[4],\n        };\n        return {\n          id: uuid(),\n          comment: {\n            text: '',\n            emoji: '',\n          },\n          content: {\n            text:\n              get(selectedChunk, 'content_with_weight') ||\n              get(selectedChunk, 'content', ''),\n          },\n          position: {\n            boundingRect: boundingRect,\n            rects: [boundingRect],\n            pageNumber: x[0],\n          },\n        };\n      })\n    : [];\n};\n\nexport const isFileUploadDone = (file: UploadFile) => file.status === 'done';\n\nexport const getExtension = (name: string) =>\n  name?.slice(name.lastIndexOf('.') + 1).toLowerCase() ?? '';\n\nexport const isPdf = (name: string) => {\n  return getExtension(name) === 'pdf';\n};\n\nexport const getUnSupportedFilesCount = (message: string) => {\n  return message.split('\\n').length;\n};\n\nexport const isSupportedPreviewDocumentType = (fileExtension: string) => {\n  return SupportedPreviewDocumentTypes.includes(fileExtension);\n};\n\nexport const isImage = (image: string) => {\n  return [...Images, 'svg'].some((x) => x === image);\n};\n","import { FileMimeType } from '@/constants/common';\nimport fileManagerService from '@/services/file-manager-service';\nimport { UploadFile } from 'antd';\n\nexport const transformFile2Base64 = (val: any): Promise<any> => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(val);\n    reader.onload = (): void => {\n      // Create image object\n      const img = new Image();\n      img.src = reader.result as string;\n\n      img.onload = () => {\n        // Create canvas\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n\n        // Calculate compressed dimensions, set max width/height to 800px\n        let width = img.width;\n        let height = img.height;\n        const maxSize = 100;\n\n        if (width > height && width > maxSize) {\n          height = (height * maxSize) / width;\n          width = maxSize;\n        } else if (height > maxSize) {\n          width = (width * maxSize) / height;\n          height = maxSize;\n        }\n\n        // Set canvas dimensions\n        canvas.width = width;\n        canvas.height = height;\n\n        // Draw image\n        ctx?.drawImage(img, 0, 0, width, height);\n\n        // Convert to base64, maintain original format and transparency\n        const compressedBase64 = canvas.toDataURL('image/png');\n        resolve(compressedBase64);\n      };\n\n      img.onerror = reject;\n    };\n    reader.onerror = reject;\n  });\n};\n\nexport const transformBase64ToFile = (\n  dataUrl: string,\n  filename: string = 'file',\n) => {\n  let arr = dataUrl.split(','),\n    bstr = atob(arr[1]),\n    n = bstr.length,\n    u8arr = new Uint8Array(n);\n\n  const mime = arr[0].match(/:(.*?);/);\n  const mimeType = mime ? mime[1] : 'image/png';\n\n  while (n--) {\n    u8arr[n] = bstr.charCodeAt(n);\n  }\n  return new File([u8arr], filename, { type: mimeType });\n};\n\nexport const normFile = (e: any) => {\n  if (Array.isArray(e)) {\n    return e;\n  }\n  return e?.fileList;\n};\n\nexport const getUploadFileListFromBase64 = (avatar: string) => {\n  let fileList: UploadFile[] = [];\n\n  if (avatar) {\n    fileList = [{ uid: '1', name: 'file', thumbUrl: avatar, status: 'done' }];\n  }\n\n  return fileList;\n};\n\nexport const getBase64FromUploadFileList = async (fileList?: UploadFile[]) => {\n  if (Array.isArray(fileList) && fileList.length > 0) {\n    const file = fileList[0];\n    const originFileObj = file.originFileObj;\n    if (originFileObj) {\n      const base64 = await transformFile2Base64(originFileObj);\n      return base64;\n    } else {\n      return file.thumbUrl;\n    }\n    // return fileList[0].thumbUrl; TODO: Even JPG files will be converted to base64 parameters in png format\n  }\n\n  return '';\n};\n\nexport const downloadFileFromBlob = (blob: Blob, name?: string) => {\n  const url = window.URL.createObjectURL(blob);\n  const a = document.createElement('a');\n  a.href = url;\n  if (name) {\n    a.download = name;\n  }\n  a.click();\n  window.URL.revokeObjectURL(url);\n};\n\nexport const downloadDocument = async ({\n  id,\n  filename,\n}: {\n  id: string;\n  filename?: string;\n}) => {\n  const response = await fileManagerService.getDocumentFile({}, id);\n  const blob = new Blob([response.data], { type: response.data.type });\n  downloadFileFromBlob(blob, filename);\n};\n\nconst Units = ['bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\nexport const formatBytes = (x: string | number) => {\n  let l = 0,\n    n = (typeof x === 'string' ? parseInt(x, 10) : x) || 0;\n\n  while (n >= 1024 && ++l) {\n    n = n / 1024;\n  }\n\n  return n.toFixed(n < 10 && l > 0 ? 1 : 0) + ' ' + Units[l];\n};\n\nexport const downloadJsonFile = async (\n  data: Record<string, any>,\n  fileName: string,\n) => {\n  const blob = new Blob([JSON.stringify(data)], { type: FileMimeType.Json });\n  downloadFileFromBlob(blob, fileName);\n};\n"],"names":["useGetFolderId","_useSearchParams","useSearchParams","id","_slicedToArray","get","useFetchPureFileList","_mutationFn","_useMutation","useMutation","mutationKey","gcTime","mutationFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","parentId","_yield$fileManagerSer","data","wrap","_context","prev","next","fileManagerService","listFile","parent_id","sent","abrupt","stop","_x","apply","arguments","mutateAsync","loading","isPending","fetchList","useFetchFileList","_data$data","_queryFn","_useHandleSearchChang","useHandleSearchChange","searchString","handleInputChange","_useGetPaginationWith","useGetPaginationWithRouter","pagination","setPagination","_useQuery","useQuery","queryKey","_objectSpread","initialData","queryFn","_callee2","_yield$fileManagerSer2","_context2","keywords","page_size","pageSize","page","current","isFetching","onInputChange","useCallback","e","total","useDeleteFile","_mutationFn2","setPaginationParams","useSetPaginationParams","queryClient","useQueryClient","_useMutation2","_callee3","params","_yield$fileManagerSer3","_context3","removeFile","code","invalidateQueries","_x2","deleteFile","useDownloadFile","_mutationFn3","_useMutation3","_callee4","response","blob","_context4","getFile","Blob","type","downloadFileFromBlob","filename","_x3","downloadFile","useRenameFile","_mutationFn4","t","useTranslation","_useMutation4","_callee5","_yield$fileManagerSer4","_context5","renameFile","message","success","_x4","useFetchParentFolderList","_queryFn2","_useQuery2","enabled","_callee6","_data$data$parent_fol","_data$data2","_yield$fileManagerSer5","_context6","getAllParentFolder","fileId","parent_folders","toReversed","useCreateFolder","_mutationFn5","_useMutation5","_callee7","_yield$fileManagerSer6","_context7","createFolder","_x5","useUploadFile","_mutationFn6","_useMutation6","_callee8","fileList","pathList","formData","_ret$data","ret","_context8","map","file","webkitRelativePath","FormData","append","forEach","index","uploadFile","t0","console","log","_x6","useConnectToKnowledge","_mutationFn7","_useMutation7","_callee9","_yield$fileManagerSer7","_context9","connectFileToKnowledge","_x7","useMoveFile","_mutationFn8","_useMutation8","_callee10","_yield$fileManagerSer8","_context10","moveFile","_x8","api","get_document_file","methods","url","method","responseType","getDocumentFile","registerServer","request","formatDate","date","dayjs","format","formatTime","buildChunkHighlights","selectedChunk","size","_selectedChunk$positi","Array","isArray","positions","every","x","boundingRect","width","height","x1","x2","y1","y2","uuid","comment","text","emoji","content","position","rects","pageNumber","getExtension","name","_name$slice$toLowerCa","slice","lastIndexOf","toLowerCase","getUnSupportedFilesCount","split","length","isSupportedPreviewDocumentType","fileExtension","SupportedPreviewDocumentTypes","includes","isImage","image","concat","_toConsumableArray","Images","some","transformFile2Base64","val","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","img","Image","src","result","canvas","document","createElement","ctx","getContext","maxSize","drawImage","compressedBase64","toDataURL","onerror","normFile","getUploadFileListFromBase64","avatar","uid","thumbUrl","status","getBase64FromUploadFileList","_ref","originFileObj","base64","window","URL","createObjectURL","a","href","download","click","revokeObjectURL","downloadDocument","_ref3","_ref2","Units","formatBytes","l","n","parseInt","toFixed","downloadJsonFile","_ref4","fileName","JSON","stringify","FileMimeType","Json"],"sourceRoot":""}